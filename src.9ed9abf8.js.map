{"version":3,"sources":["../src/dat/index.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../../../src/constants/bt709.ts","../../../src/constants/index.ts","../../../src/conversion/rgb2xyz.ts","../../../src/utils/arithmetic.ts","../../../src/conversion/rgb2hsl.ts","../../../src/conversion/xyz2lab.ts","../../../src/conversion/rgb2lab.ts","../../../src/conversion/lab2xyz.ts","../../../src/conversion/xyz2rgb.ts","../../../src/conversion/lab2rgb.ts","../../../src/conversion/index.ts","../../../src/distance/distanceCalculator.ts","../../../src/distance/cie94.ts","../../../src/distance/ciede2000.ts","../../../src/distance/cmetric.ts","../../../src/distance/euclidean.ts","../../../src/distance/manhattan.ts","../../../src/distance/pngQuant.ts","../../../src/distance/index.ts","../../../src/palette/paletteQuantizer.ts","../../../src/utils/point.ts","../../../src/utils/pointContainer.ts","../../../src/utils/palette.ts","../../../src/utils/hueStatistics.ts","../../../src/utils/progressTracker.ts","../../../src/utils/index.ts","../../../../src/palette/neuquant/neuquant.ts","../../../../src/palette/neuquant/neuquantFloat.ts","../../../../src/palette/rgbquant/colorHistogram.ts","../../../../src/palette/rgbquant/rgbquant.ts","../../../../src/palette/wu/wuQuant.ts","../../../src/palette/index.ts","../../../src/image/imageQuantizer.ts","../../../src/image/nearestColor.ts","../../../src/image/array.ts","../../../../src/image/spaceFillingCurves/hilbertCurve.ts","../../../src/image/riemersma.ts","../../../src/image/index.ts","../../../src/quality/ssim.ts","../../../src/quality/index.ts","node_modules/core-js/modules/_global.js","node_modules/core-js/modules/_core.js","node_modules/core-js/modules/_is-object.js","node_modules/core-js/modules/_an-object.js","node_modules/core-js/modules/_fails.js","node_modules/core-js/modules/_descriptors.js","node_modules/core-js/modules/_dom-create.js","node_modules/core-js/modules/_ie8-dom-define.js","node_modules/core-js/modules/_to-primitive.js","node_modules/core-js/modules/_object-dp.js","node_modules/core-js/modules/_property-desc.js","node_modules/core-js/modules/_hide.js","node_modules/core-js/modules/_has.js","node_modules/core-js/modules/_uid.js","node_modules/core-js/modules/_library.js","node_modules/core-js/modules/_shared.js","node_modules/core-js/modules/_function-to-string.js","node_modules/core-js/modules/_redefine.js","node_modules/core-js/modules/_a-function.js","node_modules/core-js/modules/_ctx.js","node_modules/core-js/modules/_export.js","node_modules/core-js/modules/_invoke.js","node_modules/core-js/modules/_html.js","node_modules/core-js/modules/_cof.js","node_modules/core-js/modules/_task.js","node_modules/core-js/modules/web.immediate.js","node_modules/core-js/fn/set-immediate.js","../../src/basicAPI.ts","../../src/image-q.ts","src/comparator.ts","src/brush.ts","src/index.ts"],"names":["color","forceCSSHex","colorFormat","__state","conversionName","toString","r","Math","round","g","b","a","h","s","toFixed","v","str","hex","length","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","target","each","call","arguments","obj","isObject","Object","keys","key","isUndefined","bind","toCall","args","i","apply","itr","scope","l","BREAK","fnc","func","threshold","callImmediately","timeout","callNow","setTimeout","delayed","toArray","undefined","isNaN","isArray","constructor","Function","INTERPRETATIONS","common","isString","original","test","match","parseInt","parseFloat","isNumber","result","toReturn","interpret","family","litmus","conversions","conversion","read","tmpComponent","ColorMath","hi","floor","f","p","q","t","c","min","max","delta","NaN","hex_with_component","componentIndex","value","Color","Error","colorToString","write","defineRGBComponent","component","componentHexIndex","defineProperty","space","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","object","property","initialValue","domElement","document","createElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP","EVENT_MAP_INV","k","e","CSS_VALUE_PIXELS","cssValueToPixels","val","isNull","dom","elem","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vert","vertical","horizontal","position","left","right","top","bottom","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","defaults","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","event","newBool","bool","addEventListener","attachEvent","removeEventListener","detachEvent","classes","split","indexOf","push","join","replace","removeAttribute","index","splice","RegExp","getComputedStyle","width","height","el","offset","offsetParent","offsetLeft","offsetTop","activeElement","type","href","BooleanController","_this","__prev","__checkbox","setAttribute","onChange","setValue","appendChild","checked","OptionController","opts","options","__select","map","element","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","_x","NumberController","_params","__min","__max","__step","step","__impliedStep","pow","log","abs","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","unbind","attempted","onMouseDown","i1","i2","o1","o2","NumberControllerSlider","preventDefault","bgRect","__background","getBoundingClientRect","onTouchMove","touches","onTouchEnd","__foreground","onTouchStart","addClass","pct","FunctionController","text","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","setSV","fieldUpSV","fieldDownH","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","background","vendor","cssText","hueGradient","css","url","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","requestAnimationFrame","callback","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","body","hide","display","opacity","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","load","preset","parent","hideable","resizable","scrollable","useLocalStorage","root","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","defineProperties","closeOnTop","getRoot","revert","name","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","stringify","getSaveObject","saveToLocalStorageIfPossible","gui","newDom","liBefore","li","removeListeners","markPresetModified","modified","__preset_select","augmentController","controller","__li","__gui","nextSibling","nextElementSibling","add","remove","firstElementChild","listen","box","method","pc","pb","returned","oldName","wasListening","newController","compose","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","remembered","presetMap","factoryArgs","concat","before","container","CLASS_CONTROLLER_ROW","location","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","__save_row","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","newConstructorTextArea","which","show","focus","save","presetName","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","setWidth","w","getCurrentPreset","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","toggleHide","CLASS_TOO_TALL","_keydownHandler","removeChild","subfolder","removeFolder","newGuiParams","folders","folder","parentElement","getOffset","node","offsetHeight","debounce","saveDialogueContents","controllers","domImport","GUIImport"],"mappings":"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","file":"src.9ed9abf8.js","sourceRoot":"..","sourcesContent":["/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\n\n/**\n * sRGB (based on ITU-R Recommendation BT.709)\n * http://en.wikipedia.org/wiki/SRGB\n */\nexport enum Y {\n  RED = .2126, GREEN = .7152, BLUE = .0722, WHITE = 1,\n}\n\n// tslint:disable-next-line:naming-convention\nexport enum x {\n  RED = .6400, GREEN = .3000, BLUE = .1500, WHITE = .3127,\n}\n\n// tslint:disable-next-line:naming-convention\nexport enum y {\n  RED = .3300, GREEN = .6000, BLUE = .0600, WHITE = .3290,\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\nimport * as bt709 from './bt709';\n\nexport {\n  bt709,\n};\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2xyz.ts - part of Image Quantization Library\n */\nfunction correctGamma(n: number) {\n  return n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92;\n}\n\nexport function rgb2xyz(r: number, g: number, b: number) {\n  // gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\n  r = correctGamma(r / 255);\n  g = correctGamma(g / 255);\n  b = correctGamma(b / 255);\n\n  // Observer. = 2°, Illuminant = D65\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505,\n  };\n}\n","export function degrees2radians(n: number) {\n  return n * (Math.PI / 180);\n}\n\nexport function max3(a: number, b: number, c: number) {\n  let m = a;\n  if (m < b) m = b;\n  if (m < c) m = c;\n  return m;\n}\n\nexport function min3(a: number, b: number, c: number) {\n  let m = a;\n  if (m > b) m = b;\n  if (m > c) m = c;\n  return m;\n}\n\nexport function intInRange(value: number, low: number, high: number) {\n  if (value > high) value = high;\n  if (value < low) value = low;\n  return value | 0;\n}\n\nexport function inRange0to255Rounded(n: number) {\n  n = Math.round(n);\n  if (n > 255) n = 255;\n  else if (n < 0) n = 0;\n  return n;\n}\n\nexport function inRange0to255(n: number) {\n  if (n > 255) n = 255;\n  else if (n < 0) n = 0;\n  return n;\n}\n\nexport function stableSort<T>(arrayToSort: T[], callback: (a: T, b: T) => number) {\n  const type = typeof arrayToSort[ 0 ];\n  let sorted: T[];\n\n  if (type === 'number' || type === 'string') {\n    const ord = Object.create(null); // tslint:disable-line:no-null-keyword\n    for (let i = 0, l = arrayToSort.length; i < l; i++) {\n      const val: string = arrayToSort[ i ] as any; // tslint:disable-line:no-any\n      if (ord[ val ] || ord[ val ] === 0) continue;\n      ord[ val ] = i;\n    }\n\n    sorted = arrayToSort.sort(function (a, b) {\n      return callback(a, b) || ord[ a ] - ord[ b ];\n    });\n  } else {\n    const ord2 = arrayToSort.slice(0);\n    sorted = arrayToSort.sort(function (a, b) {\n      return callback(a, b) || ord2.indexOf(a) - ord2.indexOf(b);\n    });\n  }\n\n  return sorted;\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2hsl.ts - part of Image Quantization Library\n */\nimport { min3, max3 } from '../utils/arithmetic';\n\n/**\n * Calculate HSL from RGB\n * Hue is in degrees [0..360]\n * Lightness: [0..1]\n * Saturation: [0..1]\n * http://web.archive.org/web/20060914040436/http://local.wasp.uwa.edu.au/~pbourke/colour/hsl/\n */\nexport function rgb2hsl(r: number, g: number, b: number) {\n  const min = min3(r, g, b);\n  const max = max3(r, g, b);\n  const delta = max - min;\n  const l = (min + max) / 510;\n\n  let s = 0;\n  if (l > 0 && l < 1) s = delta / (l < 0.5 ? (max + min) : (510 - max - min));\n\n  let h = 0;\n  if (delta > 0) {\n    if (max === r) {\n      h = (g - b) / delta;\n    } else if (max === g) {\n      h = (2 + (b - r) / delta);\n    } else {\n      h = (4 + (r - g) / delta);\n    }\n\n    h *= 60;\n    if (h < 0) h += 360;\n  }\n  return { h, s, l };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2lab.ts - part of Image Quantization Library\n */\nconst refX = 0.95047; // ref_X =  95.047   Observer= 2°, Illuminant= D65\nconst refY = 1.00000; // ref_Y = 100.000\nconst refZ = 1.08883; // ref_Z = 108.883\n\nfunction pivot(n: number) {\n  return n > 0.008856 ? Math.pow(n, 1 / 3) : (7.787 * n + 16 / 116);\n}\n\nexport function xyz2lab(x: number, y: number, z: number) {\n  x = pivot(x / refX);\n  y = pivot(y / refY);\n  z = pivot(z / refZ);\n\n  if ((116 * y) - 16 < 0) throw new Error('xxx');\n  return {\n    L: Math.max(0, (116 * y) - 16),\n    a: 500 * (x - y),\n    b: 200 * (y - z),\n  };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2lab.ts - part of Image Quantization Library\n */\nimport { rgb2xyz } from './rgb2xyz';\nimport { xyz2lab } from './xyz2lab';\n\nexport function rgb2lab(r: number, g: number, b: number) {\n  const xyz = rgb2xyz(r, g, b);\n  return xyz2lab(xyz.x, xyz.y, xyz.z);\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2xyz.ts - part of Image Quantization Library\n */\nconst refX = 0.95047; // ref_X =  95.047   Observer= 2°, Illuminant = D65\nconst refY = 1.00000; // ref_Y = 100.000\nconst refZ = 1.08883; // ref_Z = 108.883\n\nfunction pivot(n: number) {\n  return n > 0.206893034 ? Math.pow(n, 3) : (n - 16 / 116) / 7.787;\n}\n\n// tslint:disable-next-line:naming-convention\nexport function lab2xyz(L: number, a: number, b: number) {\n  const y = (L + 16) / 116;\n  const x = a / 500 + y;\n  const z = y - b / 200;\n\n  return {\n    x: refX * pivot(x),\n    y: refY * pivot(y),\n    z: refZ * pivot(z),\n  };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2rgb.ts - part of Image Quantization Library\n */\nimport { inRange0to255Rounded } from '../utils/arithmetic';\n\n// gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\nfunction correctGamma(n: number) {\n  return n > 0.0031308 ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055 : 12.92 * n;\n}\n\nexport function xyz2rgb(x: number, y: number, z: number) {\n  // Observer. = 2°, Illuminant = D65\n  const r = correctGamma(x * 3.2406 + y * -1.5372 + z * -0.4986);\n  const g = correctGamma(x * -0.9689 + y * 1.8758 + z * 0.0415);\n  const b = correctGamma(x * 0.0557 + y * -0.2040 + z * 1.0570);\n\n  return {\n    r: inRange0to255Rounded(r * 255),\n    g: inRange0to255Rounded(g * 255),\n    b: inRange0to255Rounded(b * 255),\n  };\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2rgb.ts - part of Image Quantization Library\n */\nimport { lab2xyz } from './lab2xyz';\nimport { xyz2rgb } from './xyz2rgb';\n\n// tslint:disable-next-line:naming-convention\nexport function lab2rgb(L: number, a: number, b: number) {\n  const xyz = lab2xyz(L, a, b);\n  return xyz2rgb(xyz.x, xyz.y, xyz.z);\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { rgb2xyz } from './rgb2xyz';\nexport { rgb2hsl } from './rgb2hsl';\nexport { rgb2lab } from './rgb2lab';\nexport { lab2xyz } from './lab2xyz';\nexport { lab2rgb } from './lab2rgb';\nexport { xyz2lab } from './xyz2lab';\nexport { xyz2rgb } from './xyz2rgb';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\nimport { Point, PointRGBA } from '../utils/point';\n\nexport abstract class AbstractDistanceCalculator {\n  protected _maxDistance!: number;\n  protected _whitePoint!: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n\n  constructor() {\n    this._setDefaults();\n\n    // set default maximal color component deltas (255 - 0 = 255)\n    this.setWhitePoint(255, 255, 255, 255);\n  }\n\n  setWhitePoint(r: number, g: number, b: number, a: number) {\n    this._whitePoint = {\n      r: (r > 0) ? 255 / r : 0,\n      g: (g > 0) ? 255 / g : 0,\n      b: (b > 0) ? 255 / b : 0,\n      a: (a > 0) ? 255 / a : 0,\n    };\n    this._maxDistance = this.calculateRaw(r, g, b, a, 0, 0, 0, 0);\n  }\n\n  calculateNormalized(colorA: PointRGBA, colorB: PointRGBA) {\n    return this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a) / this._maxDistance;\n  }\n\n  /**\n   * Calculate raw distance (non-normalized)\n   */\n  abstract calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number): number;\n\n  protected abstract _setDefaults(): void;\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cie94.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { rgb2lab } from '../conversion/rgb2lab';\nimport { inRange0to255 } from '../utils/arithmetic';\n\n/**\n * CIE94 method of delta-e\n * http://en.wikipedia.org/wiki/Color_difference#CIE94\n */\nexport abstract class AbstractCIE94 extends AbstractDistanceCalculator {\n  /**\n   * Weight in distance: 0.25\n   * Max DeltaE: 100\n   * Max DeltaA: 255\n   */\n  protected _kA!: number;\n  protected _Kl!: number; // tslint:disable-line:naming-convention\n  protected _K1!: number; // tslint:disable-line:naming-convention\n  protected _K2!: number; // tslint:disable-line:naming-convention\n\n  calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number) {\n    const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b));\n    const lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\n\n    const dL = lab1.L - lab2.L;\n    const dA = lab1.a - lab2.a;\n    const dB = lab1.b - lab2.b;\n    const c1 = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b);\n    const c2 = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b);\n    const dC = c1 - c2;\n\n    let deltaH = dA * dA + dB * dB - dC * dC;\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n\n    const dAlpha = (a2 - a1) * this._whitePoint.a * this._kA;\n\n    // TODO: add alpha channel support\n    return Math.sqrt(\n      Math.pow(dL / this._Kl, 2) +\n      Math.pow(dC / (1.0 + this._K1 * c1), 2) +\n      Math.pow(deltaH / (1.0 + this._K2 * c1), 2) +\n      Math.pow(dAlpha, 2),\n    );\n  }\n}\n\nexport class CIE94Textiles extends AbstractCIE94 {\n  protected _setDefaults() {\n    this._Kl = 2.0;\n    this._K1 = 0.048;\n    this._K2 = 0.014;\n    this._kA = 0.25 * 50 / 255;\n  }\n}\n\nexport class CIE94GraphicArts extends AbstractCIE94 {\n  protected _setDefaults() {\n    this._Kl = 1.0;\n    this._K1 = 0.045;\n    this._K2 = 0.015;\n    this._kA = 0.25 * 100 / 255;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ciede2000.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { rgb2lab } from '../conversion/rgb2lab';\nimport { degrees2radians, inRange0to255 } from '../utils/arithmetic';\n\n// tslint:disable:variable-name\n// tslint:disable:naming-convention\n\n/**\n * CIEDE2000 algorithm - Adapted from Sharma et al's MATLAB implementation at\n * http://www.ece.rochester.edu/~gsharma/ciede2000/\n */\nexport class CIEDE2000 extends AbstractDistanceCalculator {\n  /**\n   * Weight in distance: 0.25\n   * Max DeltaE: 100\n   * Max DeltaA: 255\n   */\n  private static readonly _kA = 0.25 * 100 / 255;\n  private static readonly _pow25to7: number = Math.pow(25, 7);\n  private static readonly _deg360InRad: number = degrees2radians(360);\n  private static readonly _deg180InRad: number = degrees2radians(180);\n  private static readonly _deg30InRad: number = degrees2radians(30);\n  private static readonly _deg6InRad: number = degrees2radians(6);\n  private static readonly _deg63InRad: number = degrees2radians(63);\n  private static readonly _deg275InRad: number = degrees2radians(275);\n  private static readonly _deg25InRad: number = degrees2radians(25);\n\n  protected _setDefaults() {}\n\n  private static _calculatehp(b: number, ap: number) {\n    const hp = Math.atan2(b, ap);\n    if (hp >= 0) return hp;\n    return hp + CIEDE2000._deg360InRad;\n  }\n\n  private static _calculateRT(ahp: number, aCp: number) {\n    const aCp_to_7 = Math.pow(aCp, 7.0);\n    const R_C = 2.0 * Math.sqrt(aCp_to_7 / (aCp_to_7 + CIEDE2000._pow25to7)); // 25^7\n    const delta_theta = CIEDE2000._deg30InRad * Math.exp(-Math.pow((ahp - CIEDE2000._deg275InRad) / CIEDE2000._deg25InRad, 2.0));\n    return -Math.sin(2.0 * delta_theta) * R_C;\n  }\n\n  private static _calculateT(ahp: number) {\n    return 1.0 - .17 * Math.cos(ahp - CIEDE2000._deg30InRad) + .24 * Math.cos(ahp * 2.0) + .32 * Math.cos(ahp * 3.0 + CIEDE2000._deg6InRad) - .2 * Math.cos(ahp * 4.0 - CIEDE2000._deg63InRad);\n  }\n\n  private static _calculate_ahp(C1pC2p: number, h_bar: number, h1p: number, h2p: number) {\n    const hpSum = h1p + h2p;\n    if (C1pC2p === 0) return hpSum;\n    if (h_bar <= CIEDE2000._deg180InRad) return hpSum / 2.0;\n    if (hpSum < CIEDE2000._deg360InRad) return (hpSum + CIEDE2000._deg360InRad) / 2.0;\n    return (hpSum - CIEDE2000._deg360InRad) / 2.0;\n  }\n\n  private static _calculate_dHp(C1pC2p: number, h_bar: number, h2p: number, h1p: number) {\n    let dhp: number;\n    if (C1pC2p === 0) {\n      dhp = 0;\n    } else if (h_bar <= CIEDE2000._deg180InRad) {\n      dhp = h2p - h1p;\n    } else if (h2p <= h1p) {\n      dhp = h2p - h1p + CIEDE2000._deg360InRad;\n    } else {\n      dhp = h2p - h1p - CIEDE2000._deg360InRad;\n    }\n    return 2.0 * Math.sqrt(C1pC2p) * Math.sin(dhp / 2.0);\n  }\n\n  calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number) {\n    const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b));\n    const lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\n    const dA = (a2 - a1) * this._whitePoint.a * CIEDE2000._kA;\n    const dE2 = this.calculateRawInLab(lab1, lab2);\n\n    return Math.sqrt(dE2 + dA * dA);\n  }\n\n  calculateRawInLab(Lab1: { L: number; a: number; b: number }, Lab2: { L: number; a: number; b: number }) {\n    // Get L,a,b values for color 1\n    const L1 = Lab1.L;\n    const a1 = Lab1.a;\n    const b1 = Lab1.b;\n\n    // Get L,a,b values for color 2\n    const L2 = Lab2.L;\n    const a2 = Lab2.a;\n    const b2 = Lab2.b;\n\n    // Calculate Cprime1, Cprime2, Cabbar\n    const C1 = Math.sqrt(a1 * a1 + b1 * b1);\n    const C2 = Math.sqrt(a2 * a2 + b2 * b2);\n    const pow_a_C1_C2_to_7 = Math.pow((C1 + C2) / 2.0, 7.0);\n\n    const G = 0.5 * (1.0 - Math.sqrt(pow_a_C1_C2_to_7 / (pow_a_C1_C2_to_7 + CIEDE2000._pow25to7))); // 25^7\n    const a1p = (1.0 + G) * a1;\n    const a2p = (1.0 + G) * a2;\n\n    const C1p = Math.sqrt(a1p * a1p + b1 * b1);\n    const C2p = Math.sqrt(a2p * a2p + b2 * b2);\n    const C1pC2p = C1p * C2p;\n\n    // Angles in Degree.\n    const h1p = CIEDE2000._calculatehp(b1, a1p);\n    const h2p = CIEDE2000._calculatehp(b2, a2p);\n    const h_bar = Math.abs(h1p - h2p);\n    const dLp = L2 - L1;\n    const dCp = C2p - C1p;\n    const dHp = CIEDE2000._calculate_dHp(C1pC2p, h_bar, h2p, h1p);\n    const ahp = CIEDE2000._calculate_ahp(C1pC2p, h_bar, h1p, h2p);\n\n    const T = CIEDE2000._calculateT(ahp);\n\n    const aCp = (C1p + C2p) / 2.0;\n    const aLp_minus_50_square = Math.pow((L1 + L2) / 2.0 - 50.0, 2.0);\n    const S_L = 1.0 + (.015 * aLp_minus_50_square) / Math.sqrt(20.0 + aLp_minus_50_square);\n    const S_C = 1.0 + .045 * aCp;\n    const S_H = 1.0 + .015 * T * aCp;\n\n    const R_T = CIEDE2000._calculateRT(ahp, aCp);\n\n    const dLpSL = dLp / S_L; // S_L * kL, where kL is 1.0\n    const dCpSC = dCp / S_C; // S_C * kC, where kC is 1.0\n    const dHpSH = dHp / S_H; // S_H * kH, where kH is 1.0\n\n    return Math.pow(dLpSL, 2) + Math.pow(dCpSC, 2) + Math.pow(dHpSH, 2) + R_T * dCpSC * dHpSH;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cmetric.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\n\n/**\n * TODO: Name it: http://www.compuphase.com/cmetric.htm\n */\nexport class CMetric extends AbstractDistanceCalculator {\n  calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number) {\n    const rmean = (r1 + r2) / 2 * this._whitePoint.r;\n    const r = (r1 - r2) * this._whitePoint.r;\n    const g = (g1 - g2) * this._whitePoint.g;\n    const b = (b1 - b2) * this._whitePoint.b;\n    const dE = ((((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8));\n    const dA = (a2 - a1) * this._whitePoint.a;\n\n    return Math.sqrt(dE + dA * dA);\n  }\n\n  protected _setDefaults() {}\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * euclidean.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { Y } from '../constants/bt709';\n\n/**\n * Euclidean color distance\n */\nexport abstract class AbstractEuclidean extends AbstractDistanceCalculator {\n  protected _kR!: number;\n  protected _kG!: number;\n  protected _kB!: number;\n  protected _kA!: number;\n\n  calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number) {\n    const dR = r2 - r1;\n    const dG = g2 - g1;\n    const dB = b2 - b1;\n    const dA = a2 - a1;\n    return Math.sqrt(this._kR * dR * dR + this._kG * dG * dG + this._kB * dB * dB + this._kA * dA * dA);\n  }\n}\n\nexport class Euclidean extends AbstractEuclidean {\n  protected _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n}\n\n/**\n * Euclidean color distance (RGBQuant modification w Alpha)\n */\nexport class EuclideanBT709 extends AbstractEuclidean {\n  protected _setDefaults() {\n    this._kR = Y.RED;\n    this._kG = Y.GREEN;\n    this._kB = Y.BLUE;\n    // TODO: what is the best coefficient below?\n    this._kA = 1;\n  }\n}\n\n/**\n * Euclidean color distance (RGBQuant modification w/o Alpha)\n */\nexport class EuclideanBT709NoAlpha extends AbstractEuclidean {\n  protected _setDefaults() {\n    this._kR = Y.RED;\n    this._kG = Y.GREEN;\n    this._kB = Y.BLUE;\n    this._kA = 0;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * manhattanNeuQuant.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\nimport { Y } from '../constants/bt709';\n\n/**\n * Manhattan distance (NeuQuant modification) - w/o sRGB coefficients\n */\nexport abstract class AbstractManhattan extends AbstractDistanceCalculator {\n  protected _kR!: number;\n  protected _kG!: number;\n  protected _kB!: number;\n  protected _kA!: number;\n\n  calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number) {\n    let dR = r2 - r1;\n    let dG = g2 - g1;\n    let dB = b2 - b1;\n    let dA = a2 - a1;\n    if (dR < 0) dR = 0 - dR;\n    if (dG < 0) dG = 0 - dG;\n    if (dB < 0) dB = 0 - dB;\n    if (dA < 0) dA = 0 - dA;\n\n    return this._kR * dR + this._kG * dG + this._kB * dB + this._kA * dA;\n  }\n}\n\nexport class Manhattan extends AbstractManhattan {\n  protected _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n}\n\n/**\n * Manhattan distance (Nommyde modification)\n * https://github.com/igor-bezkrovny/image-quantization/issues/4#issuecomment-235155320\n */\nexport class ManhattanNommyde extends AbstractManhattan {\n  protected _setDefaults() {\n    this._kR = 0.4984;\n    this._kG = 0.8625;\n    this._kB = 0.2979;\n    // TODO: what is the best coefficient below?\n    this._kA = 1;\n  }\n}\n\n/**\n * Manhattan distance (sRGB coefficients)\n */\nexport class ManhattanBT709 extends AbstractManhattan {\n  protected _setDefaults() {\n    this._kR = Y.RED;\n    this._kG = Y.GREEN;\n    this._kB = Y.BLUE;\n    // TODO: what is the best coefficient below?\n    this._kA = 1;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pngQuant.ts - part of Image Quantization Library\n */\nimport { AbstractDistanceCalculator } from './distanceCalculator';\n\n/**\n * TODO: check quality of this distance equation\n * TODO: ask author for usage rights\n * taken from:\n * {@link http://stackoverflow.com/questions/4754506/color-similarity-distance-in-rgba-color-space/8796867#8796867}\n * {@link https://github.com/pornel/pngquant/blob/cc39b47799a7ff2ef17b529f9415ff6e6b213b8f/lib/pam.h#L148}\n */\nexport class PNGQuant extends AbstractDistanceCalculator {\n  /**\n   * Author's comments\n   * px_b.rgb = px.rgb + 0*(1-px.a) // blend px on black\n   * px_b.a   = px.a   + 1*(1-px.a)\n   * px_w.rgb = px.rgb + 1*(1-px.a) // blend px on white\n   * px_w.a   = px.a   + 1*(1-px.a)\n   *\n   * px_b.rgb = px.rgb              // difference same as in opaque RGB\n   * px_b.a   = 1\n   * px_w.rgb = px.rgb - px.a       // difference simplifies to formula below\n   * px_w.a   = 1\n   *\n   * (px.rgb - px.a) - (py.rgb - py.a)\n   * (px.rgb - py.rgb) + (py.a - px.a)\n   *\n   */\n  calculateRaw(r1: number, g1: number, b1: number, a1: number, r2: number, g2: number, b2: number, a2: number) {\n    const alphas = (a2 - a1) * this._whitePoint.a;\n    return this._colordifferenceCh(r1 * this._whitePoint.r, r2 * this._whitePoint.r, alphas) +\n      this._colordifferenceCh(g1 * this._whitePoint.g, g2 * this._whitePoint.g, alphas) +\n      this._colordifferenceCh(b1 * this._whitePoint.b, b2 * this._whitePoint.b, alphas);\n  }\n\n  private _colordifferenceCh(x: number, y: number, alphas: number) {\n    // maximum of channel blended on white, and blended on black\n    // premultiplied alpha and backgrounds 0/1 shorten the formula\n    const black = x - y;\n    const white = black + alphas;\n\n    return black * black + white * white;\n  }\n\n  protected _setDefaults() {}\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { AbstractDistanceCalculator } from './distanceCalculator';\nexport { CIE94Textiles, CIE94GraphicArts } from './cie94';\nexport { CIEDE2000 } from './ciede2000';\nexport { CMetric } from './cmetric';\nexport { AbstractEuclidean, Euclidean, EuclideanBT709NoAlpha, EuclideanBT709 } from './euclidean';\nexport { AbstractManhattan, Manhattan, ManhattanBT709, ManhattanNommyde } from './manhattan';\nexport { PNGQuant } from './pngQuant';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { PaletteQuantizerYieldValue } from './paletteQuantizerYieldValue';\n\nexport abstract class AbstractPaletteQuantizer {\n  abstract sample(pointContainer: PointContainer): void;\n  abstract quantize(): IterableIterator<PaletteQuantizerYieldValue>;\n\n  quantizeSync() {\n    for (const value of this.quantize()) {\n      if (value.palette) {\n        return value.palette;\n      }\n    }\n\n    throw new Error('unreachable');\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * point.ts - part of Image Quantization Library\n */\nimport { Y } from '../constants/bt709';\n\nexport interface PointRGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\n/**\n * v8 optimized class\n * 1) \"constructor\" should have initialization with worst types\n * 2) \"set\" should have |0 / >>> 0\n */\nexport class Point implements PointRGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n  uint32: number;\n  rgba: number[]; // TODO: better name is quadruplet or quad may be?\n  // Lab : { L : number; a : number; b : number };\n\n  static createByQuadruplet(quadruplet: number[]) {\n    const point = new Point();\n\n    point.r = quadruplet[ 0 ] | 0;\n    point.g = quadruplet[ 1 ] | 0;\n    point.b = quadruplet[ 2 ] | 0;\n    point.a = quadruplet[ 3 ] | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    // point._loadLab();\n    return point;\n  }\n\n  static createByRGBA(red: number, green: number, blue: number, alpha: number) {\n    const point = new Point();\n\n    point.r = red | 0;\n    point.g = green | 0;\n    point.b = blue | 0;\n    point.a = alpha | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    // point._loadLab();\n    return point;\n  }\n\n  static createByUint32(uint32: number) {\n    const point = new Point();\n\n    point.uint32 = uint32 >>> 0;\n    point._loadRGBA();\n    point._loadQuadruplet();\n    // point._loadLab();\n    return point;\n  }\n\n  constructor() {\n    this.uint32 = -1 >>> 0;\n    this.r = this.g = this.b = this.a = 0;\n    this.rgba = new Array(4);\n    this.rgba[ 0 ] = 0;\n    this.rgba[ 1 ] = 0;\n    this.rgba[ 2 ] = 0;\n    this.rgba[ 3 ] = 0;\n    /*\n     this.Lab = {\n     L : 0.0,\n     a : 0.0,\n     b : 0.0\n     };\n     */\n  }\n\n  from(point: Point) {\n    this.r = point.r;\n    this.g = point.g;\n    this.b = point.b;\n    this.a = point.a;\n    this.uint32 = point.uint32;\n    this.rgba[ 0 ] = point.r;\n    this.rgba[ 1 ] = point.g;\n    this.rgba[ 2 ] = point.b;\n    this.rgba[ 3 ] = point.a;\n\n    /*\n     this.Lab.L = point.Lab.L;\n     this.Lab.a = point.Lab.a;\n     this.Lab.b = point.Lab.b;\n     */\n  }\n\n  /*\n   * TODO:\n   Luminance from RGB:\n\n   Luminance (standard for certain colour spaces): (0.2126*R + 0.7152*G + 0.0722*B) [1]\n   Luminance (perceived option 1): (0.299*R + 0.587*G + 0.114*B) [2]\n   Luminance (perceived option 2, slower to calculate):  sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 ) ? sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 ) (thanks to @MatthewHerbst) [http://alienryderflex.com/hsp.html]\n   */\n  getLuminosity(useAlphaChannel: boolean) {\n    let r = this.r;\n    let g = this.g;\n    let b = this.b;\n\n    if (useAlphaChannel) {\n      r = Math.min(255, 255 - this.a + this.a * r / 255);\n      g = Math.min(255, 255 - this.a + this.a * g / 255);\n      b = Math.min(255, 255 - this.a + this.a * b / 255);\n    }\n\n    // var luma = this.r * Point._RED_COEFFICIENT + this.g * Point._GREEN_COEFFICIENT + this.b * Point._BLUE_COEFFICIENT;\n\n    /*\n     if(useAlphaChannel) {\n     luma = (luma * (255 - this.a)) / 255;\n     }\n     */\n\n    return r * Y.RED + g * Y.GREEN + b * Y.BLUE;\n  }\n\n  private _loadUINT32() {\n    this.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;\n  }\n\n  private _loadRGBA() {\n    this.r = this.uint32 & 0xff;\n    this.g = (this.uint32 >>> 8) & 0xff;\n    this.b = (this.uint32 >>> 16) & 0xff;\n    this.a = (this.uint32 >>> 24) & 0xff;\n  }\n\n  private _loadQuadruplet() {\n    this.rgba[ 0 ] = this.r;\n    this.rgba[ 1 ] = this.g;\n    this.rgba[ 2 ] = this.b;\n    this.rgba[ 3 ] = this.a;\n\n    /*\n     var xyz = rgb2xyz(this.r, this.g, this.b);\n     var lab = xyz2lab(xyz.x, xyz.y, xyz.z);\n     this.lab.l = lab.l;\n     this.lab.a = lab.a;\n     this.lab.b = lab.b;\n     */\n  }\n\n  /*\n   private _loadLab() : void {\n   var Lab = Color.Conversion.rgb2lab(this.r, this.g, this.b);\n   this.Lab.L = Lab.L;\n   this.Lab.a = Lab.a;\n   this.Lab.b = Lab.b;\n   }\n   */\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pointContainer.ts - part of Image Quantization Library\n */\nimport { Point } from './point';\n\n/**\n * v8 optimizations done.\n * fromXXX methods are static to move out polymorphic code from class instance itself.\n */\nexport class PointContainer {\n  private readonly _pointArray: Point[];\n  private _width: number;\n  private _height: number;\n\n  constructor() {\n    this._width = 0;\n    this._height = 0;\n    this._pointArray = [];\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  setWidth(width: number) {\n    this._width = width;\n  }\n\n  setHeight(height: number) {\n    this._height = height;\n  }\n\n  getPointArray() {\n    return this._pointArray;\n  }\n\n  clone() {\n    const clone = new PointContainer();\n    clone._width = this._width;\n    clone._height = this._height;\n\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      clone._pointArray[i] = Point.createByUint32(this._pointArray[i].uint32 | 0); // \"| 0\" is added for v8 optimization\n    }\n\n    return clone;\n  }\n\n  toUint32Array() {\n    const l = this._pointArray.length;\n    const uint32Array = new Uint32Array(l);\n\n    for (let i = 0; i < l; i++) {\n      uint32Array[i] = this._pointArray[i].uint32;\n    }\n\n    return uint32Array;\n  }\n\n  toUint8Array() {\n    return new Uint8Array(this.toUint32Array().buffer);\n  }\n\n  static fromHTMLImageElement(img: HTMLImageElement) {\n    const width = img.naturalWidth;\n    const height = img.naturalHeight;\n\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    const ctx = canvas.getContext('2d')!; // tslint:disable-line:no-non-null-assertion\n    ctx.drawImage(img, 0, 0, width, height, 0, 0, width, height);\n\n    return PointContainer.fromHTMLCanvasElement(canvas);\n  }\n\n  static fromHTMLCanvasElement(canvas: HTMLCanvasElement) {\n    const width = canvas.width;\n    const height = canvas.height;\n\n    const ctx = canvas.getContext('2d')!; // tslint:disable-line:no-non-null-assertion\n    const imgData = ctx.getImageData(0, 0, width, height);\n\n    return PointContainer.fromImageData(imgData);\n  }\n\n  static fromImageData(imageData: ImageData) {\n    const width = imageData.width;\n    const height = imageData.height;\n\n    return PointContainer.fromUint8Array(imageData.data, width, height);\n  }\n\n  static fromUint8Array(uint8Array: number[] | Uint8Array | Uint8ClampedArray, width: number, height: number) {\n    switch (Object.prototype.toString.call(uint8Array)) {\n      case '[object Uint8ClampedArray]':\n      case '[object Uint8Array]':\n        break;\n\n      default:\n        uint8Array = new Uint8Array(uint8Array);\n    }\n\n    const uint32Array = new Uint32Array((uint8Array as Uint8Array).buffer);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n\n  static fromUint32Array(uint32Array: Uint32Array, width: number, height: number) {\n    const container = new PointContainer();\n\n    container._width = width;\n    container._height = height;\n\n    for (let i = 0, l = uint32Array.length; i < l; i++) {\n      container._pointArray[i] = Point.createByUint32(uint32Array[i] | 0); // \"| 0\" is added for v8 optimization\n    }\n\n    return container;\n  }\n\n  static fromBuffer(buffer: Buffer, width: number, height: number) {\n    const uint32Array = new Uint32Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / Uint32Array.BYTES_PER_ELEMENT);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * palette.ts - part of Image Quantization Library\n */\n\nimport { Point } from './point';\nimport { PointContainer } from './pointContainer';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { rgb2hsl } from '../conversion/rgb2hsl';\n\n// TODO: make paletteArray via pointContainer, so, export will be available via pointContainer.exportXXX\n\nconst hueGroups = 10;\n\nexport function hueGroup(hue: number, segmentsNumber: number) {\n  const maxHue = 360;\n  const seg = maxHue / segmentsNumber;\n  const half = seg / 2;\n\n  for (let i = 1, mid = seg - half; i < segmentsNumber; i++, mid += seg) {\n    if (hue >= mid && hue < mid + seg) return i;\n  }\n  return 0;\n}\n\nexport class Palette {\n  private readonly _pointContainer: PointContainer;\n  private readonly _pointArray: Point[] = [];\n  private _i32idx: { [ key: string ]: number } = {};\n\n  constructor() {\n    this._pointContainer = new PointContainer();\n    this._pointContainer.setHeight(1);\n    this._pointArray = this._pointContainer.getPointArray();\n  }\n\n  add(color: Point) {\n    this._pointArray.push(color);\n    this._pointContainer.setWidth(this._pointArray.length);\n  }\n\n  has(color: Point) {\n    for (let i = this._pointArray.length - 1; i >= 0; i--) {\n      if (color.uint32 === this._pointArray[ i ].uint32) return true;\n    }\n\n    return false;\n  }\n\n  // TOTRY: use HUSL - http://boronine.com/husl/ http://www.husl-colors.org/ https://github.com/husl-colors/husl\n  getNearestColor(colorDistanceCalculator: AbstractDistanceCalculator, color: Point) {\n    return this._pointArray[ this._getNearestIndex(colorDistanceCalculator, color) | 0 ];\n  }\n\n  getPointContainer() {\n    return this._pointContainer;\n  }\n\n  // TOTRY: use HUSL - http://boronine.com/husl/\n  /*\n   public nearestIndexByUint32(i32) {\n   var idx : number = this._nearestPointFromCache(\"\" + i32);\n   if (idx >= 0) return idx;\n\n   var min = 1000,\n   rgb = [\n   (i32 & 0xff),\n   (i32 >>> 8) & 0xff,\n   (i32 >>> 16) & 0xff,\n   (i32 >>> 24) & 0xff\n   ],\n   len = this._pointArray.length;\n\n   idx = 0;\n   for (var i = 0; i < len; i++) {\n   var dist = Utils.distEuclidean(rgb, this._pointArray[i].rgba);\n\n   if (dist < min) {\n   min = dist;\n   idx = i;\n   }\n   }\n\n   this._i32idx[i32] = idx;\n   return idx;\n   }\n   */\n\n  private _nearestPointFromCache(key: string) {\n    return typeof this._i32idx[ key ] === 'number' ? this._i32idx[ key ] : -1;\n  }\n\n  private _getNearestIndex(colorDistanceCalculator: AbstractDistanceCalculator, point: Point) {\n    let idx = this._nearestPointFromCache('' + point.uint32);\n    if (idx >= 0) return idx;\n\n    let minimalDistance = Number.MAX_VALUE;\n\n    idx = 0;\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      const p = this._pointArray[ i ];\n      const distance = colorDistanceCalculator.calculateRaw(point.r, point.g, point.b, point.a, p.r, p.g, p.b, p.a);\n\n      if (distance < minimalDistance) {\n        minimalDistance = distance;\n        idx = i;\n      }\n    }\n\n    this._i32idx[ point.uint32 ] = idx;\n    return idx;\n  }\n\n  /*\n   public reduce(histogram : ColorHistogram, colors : number) {\n   if (this._pointArray.length > colors) {\n   var idxi32 = histogram.getImportanceSortedColorsIDXI32();\n\n   // quantize histogram to existing palette\n   var keep = [], uniqueColors = 0, idx, pruned = false;\n\n   for (var i = 0, len = idxi32.length; i < len; i++) {\n   // palette length reached, unset all remaining colors (sparse palette)\n   if (uniqueColors >= colors) {\n   this.prunePal(keep);\n   pruned = true;\n   break;\n   } else {\n   idx = this.nearestIndexByUint32(idxi32[i]);\n   if (keep.indexOf(idx) < 0) {\n   keep.push(idx);\n   uniqueColors++;\n   }\n   }\n   }\n\n   if (!pruned) {\n   this.prunePal(keep);\n   }\n   }\n   }\n\n   // TODO: check usage, not tested!\n   public prunePal(keep : number[]) {\n   var colors = this._pointArray.length;\n   for (var colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\n   if (keep.indexOf(colorIndex) < 0) {\n\n   if(colorIndex + 1 < colors) {\n   this._pointArray[ colorIndex ] = this._pointArray [ colors - 1 ];\n   }\n   --colors;\n   //this._pointArray[colorIndex] = null;\n   }\n   }\n   console.log(\"colors pruned: \" + (this._pointArray.length - colors));\n   this._pointArray.length = colors;\n   this._i32idx = {};\n   }\n   */\n\n  // TODO: group very low lum and very high lum colors\n  // TODO: pass custom sort order\n  // TODO: sort criteria function should be placed to HueStats class\n  sort() {\n    this._i32idx = {};\n    this._pointArray.sort((a: Point, b: Point) => {\n      const hslA = rgb2hsl(a.r, a.g, a.b);\n      const hslB = rgb2hsl(b.r, b.g, b.b);\n\n      // sort all grays + whites together\n      const hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + hueGroup(hslA.h, hueGroups);\n      const hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + hueGroup(hslB.h, hueGroups);\n      /*\n       var hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + Utils.hueGroup(hslA.h, hueGroups);\n       var hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + Utils.hueGroup(hslB.h, hueGroups);\n       */\n\n      const hueDiff = hueB - hueA;\n      if (hueDiff) return -hueDiff;\n\n      /*\n       var lumDiff = Utils.lumGroup(+hslB.l.toFixed(2)) - Utils.lumGroup(+hslA.l.toFixed(2));\n       if (lumDiff) return -lumDiff;\n       */\n      const lA = a.getLuminosity(true);\n      const lB = b.getLuminosity(true);\n\n      if (lB - lA !== 0) return lB - lA;\n\n      const satDiff = ((hslB.s * 100) | 0) - ((hslA.s * 100) | 0);\n      if (satDiff) return -satDiff;\n\n      return 0;\n    });\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * hueStatistics.ts - part of Image Quantization Library\n */\nimport { rgb2hsl } from '../conversion/rgb2hsl';\nimport { hueGroup } from './palette';\n\nclass HueGroup {\n  num = 0;\n  cols: number[] = [];\n}\n\nexport class HueStatistics {\n  private _numGroups: number;\n  private _minCols: number;\n  private _stats: HueGroup[];\n  private _groupsFull: number;\n\n  constructor(numGroups: number, minCols: number) {\n    this._numGroups = numGroups;\n    this._minCols = minCols;\n    this._stats = [];\n\n    for (let i = 0; i <= numGroups; i++) {\n      this._stats[ i ] = new HueGroup();\n    }\n\n    this._groupsFull = 0;\n  }\n\n  check(i32: number) {\n    if (this._groupsFull === this._numGroups + 1) {\n      this.check = function () {\n      };\n    }\n\n    const r = (i32 & 0xff);\n    const g = (i32 >>> 8) & 0xff;\n    const b = (i32 >>> 16) & 0xff;\n    const hg = (r === g && g === b) ? 0 : 1 + hueGroup(rgb2hsl(r, g, b).h, this._numGroups);\n    const gr = this._stats[ hg ];\n    const min = this._minCols;\n\n    gr.num++;\n\n    if (gr.num > min) {\n      return;\n    }\n    if (gr.num === min) {\n      this._groupsFull++;\n    }\n\n    if (gr.num <= min) {\n      this._stats[ hg ].cols.push(i32);\n    }\n  }\n\n  injectIntoDictionary(histG: { [key: string ]: number }) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[ i ].num <= this._minCols) {\n        this._stats[ i ].cols.forEach((col: number) => {\n          if (!histG[ col ]) {\n            histG[ col ] = 1;\n          } else {\n            histG[ col ]++;\n          }\n        });\n      }\n    }\n  }\n\n  injectIntoArray(histG: string[]) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[ i ].num <= this._minCols) {\n        this._stats[ i ].cols.forEach((col: any) => { // tslint:disable-line:no-any\n          if (histG.indexOf(col) === -1) {\n            histG.push(col);\n          }\n        });\n      }\n    }\n  }\n}\n","export class ProgressTracker {\n  static readonly steps = 100;\n\n  progress: number;\n\n  private _step: number;\n  private _range: number;\n  private _last: number;\n  private _progressRange: number;\n\n  constructor(valueRange: number, progressRange: number) {\n    this._range = valueRange;\n    this._progressRange = progressRange;\n    this._step = Math.max(1, this._range / (ProgressTracker.steps + 1) | 0);\n    this._last = -this._step;\n    this.progress = 0;\n  }\n\n  shouldNotify(current: number) {\n    if (current - this._last >= this._step) {\n      this._last = current;\n      this.progress = Math.min(this._progressRange * this._last / this._range, this._progressRange);\n      return true;\n    }\n\n    return false;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nimport * as arithmetic from './arithmetic';\nimport { HueStatistics } from './hueStatistics';\nimport { Palette } from './palette';\nimport { Point } from './point';\nimport { PointContainer } from './pointContainer';\nimport { ProgressTracker } from './progressTracker';\n\nexport {\n  Point,\n  PointContainer,\n  Palette,\n  HueStatistics,\n  ProgressTracker,\n  arithmetic,\n};\n","/*\n * NeuQuant Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\n * the algorithm.\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\n * this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons who\n * receive copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n */\n\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\n\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { ProgressTracker } from '../../utils';\n\n// bias for colour values\nconst networkBiasShift = 3;\n\nclass Neuron {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n\n  constructor(defaultValue: number) {\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n\n  /**\n   * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n   * @example\n   * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\n   */\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\n  }\n\n  subtract(r: number, g: number, b: number, a: number) {\n    this.r -= r | 0;\n    this.g -= g | 0;\n    this.b -= b | 0;\n    this.a -= a | 0;\n  }\n\n  /*\n   public subtract(r : number, g : number, b : number, a : number) : void {\n   this.r = (-r + this.r) | 0;\n   this.g = (-g + this.g) | 0;\n   this.b = (-b + this.b) | 0;\n   this.a = (-a + this.a) | 0;\n\n   this.r -= r;\n   this.g -= g;\n   this.b -= b;\n   this.a -= a;\n\n   this.r -= r | 0;\n   this.g -= g | 0;\n   this.b -= b | 0;\n   this.a -= a | 0;\n   }\n   */\n}\n\nexport class NeuQuant extends AbstractPaletteQuantizer {\n  /*\n   four primes near 500 - assume no image has a length so large\n   that it is divisible by all four primes\n   */\n  private static readonly _prime1: number = 499;\n  private static readonly _prime2: number = 491;\n  private static readonly _prime3: number = 487;\n  private static readonly _prime4: number = 503;\n  private static readonly _minpicturebytes: number = NeuQuant._prime4;\n\n  // no. of learning cycles\n  private static readonly _nCycles: number = 100;\n\n  // defs for freq and bias\n  private static readonly _initialBiasShift: number = 16;\n\n  // bias for fractions\n  private static readonly _initialBias: number = (1 << NeuQuant._initialBiasShift);\n  private static readonly _gammaShift: number = 10;\n\n  // gamma = 1024\n  // TODO: why gamma is never used?\n  // private static _gamma : number     = (1 << NeuQuant._gammaShift);\n  private static readonly _betaShift: number = 10;\n  private static readonly _beta: number = (NeuQuant._initialBias >> NeuQuant._betaShift);\n\n  // beta = 1/1024\n  private static readonly _betaGamma: number = (NeuQuant._initialBias << (NeuQuant._gammaShift - NeuQuant._betaShift));\n\n  /*\n   * for 256 cols, radius starts\n   */\n  private static readonly _radiusBiasShift: number = 6;\n\n  // at 32.0 biased by 6 bits\n  private static readonly _radiusBias: number = 1 << NeuQuant._radiusBiasShift;\n\n  // and decreases by a factor of 1/30 each cycle\n  private static readonly _radiusDecrease: number = 30;\n\n  /* defs for decreasing alpha factor */\n\n  // alpha starts at 1.0\n  private static readonly _alphaBiasShift: number = 10;\n\n  // biased by 10 bits\n  private static readonly _initAlpha: number = (1 << NeuQuant._alphaBiasShift);\n\n  /* radBias and alphaRadBias used for radpower calculation */\n  private static readonly _radBiasShift: number = 8;\n  private static readonly _radBias: number = 1 << NeuQuant._radBiasShift;\n  private static readonly _alphaRadBiasShift: number = NeuQuant._alphaBiasShift + NeuQuant._radBiasShift;\n  private static readonly _alphaRadBias: number = 1 << NeuQuant._alphaRadBiasShift;\n\n  private _pointArray: Point[];\n  private readonly _networkSize: number;\n  private _network!: Neuron[];\n\n  /** sampling factor 1..30 */\n  private readonly _sampleFactor!: number;\n  private _radPower!: number[];\n\n  // bias and freq arrays for learning\n  private _freq!: number[];\n\n  /* for network lookup - really 256 */\n  private _bias!: number[];\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator, colors = 256) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n\n    this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\n  }\n\n  sample(pointContainer: PointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n\n  * quantize(): IterableIterator<PaletteQuantizerYieldValue> {\n    this._init();\n\n    yield * this._learn();\n\n    yield {\n      palette: this._buildPalette(),\n      progress: 100,\n    };\n  }\n\n  private _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[ i ] = new Neuron((i << (networkBiasShift + 8)) / this._networkSize | 0);\n\n      // 1/this._networkSize\n      this._freq[ i ] = NeuQuant._initialBias / this._networkSize | 0;\n      this._bias[ i ] = 0;\n    }\n  }\n\n  /**\n   * Main Learning Loop\n   */\n  private * _learn() {\n    let sampleFactor = this._sampleFactor;\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < NeuQuant._minpicturebytes) sampleFactor = 1;\n\n    const alphadec = 30 + (sampleFactor - 1) / 3 | 0;\n    const pointsToSample = pointsNumber / sampleFactor | 0;\n\n    let delta = pointsToSample / NeuQuant._nCycles | 0;\n    let alpha = NeuQuant._initAlpha;\n    let radius = (this._networkSize >> 3) * NeuQuant._radiusBias;\n\n    let rad = radius >> NeuQuant._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n\n    for (let i = 0; i < rad; i++) {\n      this._radPower[ i ] = alpha * (((rad * rad - i * i) * NeuQuant._radBias) / (rad * rad)) >>> 0;\n    }\n\n    let step: number;\n    if (pointsNumber < NeuQuant._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % NeuQuant._prime1 !== 0) {\n      step = NeuQuant._prime1;\n    } else if ((pointsNumber % NeuQuant._prime2) !== 0) {\n      step = NeuQuant._prime2;\n    } else if ((pointsNumber % NeuQuant._prime3) !== 0) {\n      step = NeuQuant._prime3;\n    } else {\n      step = NeuQuant._prime4;\n    }\n\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample;) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n\n      const point = this._pointArray[ pointIndex ];\n      const b = point.b << networkBiasShift;\n      const g = point.g << networkBiasShift;\n      const r = point.r << networkBiasShift;\n      const a = point.a << networkBiasShift;\n      const neuronIndex = this._contest(b, g, r, a);\n\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n\n      /* alter neighbours */\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n\n      if (delta === 0) delta = 1;\n\n      if (i % delta === 0) {\n        alpha -= (alpha / alphadec) | 0;\n        radius -= (radius / NeuQuant._radiusDecrease) | 0;\n        rad = radius >> NeuQuant._radiusBiasShift;\n\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) this._radPower[ j ] = alpha * (((rad * rad - j * j) * NeuQuant._radBias) / (rad * rad)) >>> 0;\n      }\n    }\n  }\n\n  private _buildPalette() {\n    const palette = new Palette();\n\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n\n    palette.sort();\n    return palette;\n  }\n\n  /**\n   * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\n   */\n  private _alterNeighbour(rad: number, i: number, b: number, g: number, r: number, al: number) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n\n    while (j < hi || k > lo) {\n      const a = this._radPower[ m++ ] / NeuQuant._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[ j++ ];\n        p.subtract(\n          a * (p.r - r),\n          a * (p.g - g),\n          a * (p.b - b),\n          a * (p.a - al),\n        );\n      }\n\n      if (k > lo) {\n        const p = this._network[ k-- ];\n        p.subtract(\n          a * (p.r - r),\n          a * (p.g - g),\n          a * (p.b - b),\n          a * (p.a - al),\n        );\n      }\n    }\n  }\n\n  /**\n   * Move neuron i towards biased (b,g,r) by factor alpha\n   */\n  private _alterSingle(alpha: number, i: number, b: number, g: number, r: number, a: number) {\n    alpha /= NeuQuant._initAlpha;\n\n    /* alter hit neuron */\n    const n = this._network[ i ];\n    n.subtract(\n      alpha * (n.r - r),\n      alpha * (n.g - g),\n      alpha * (n.b - b),\n      alpha * (n.a - a),\n    );\n  }\n\n  /**\n   * Search for biased BGR values\n   * description:\n   *    finds closest neuron (min dist) and updates freq\n   *    finds best neuron (min dist-bias) and returns position\n   *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\n   *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\n   *\n   * Original distance equation:\n   *        dist = abs(dR) + abs(dG) + abs(dB)\n   */\n  private _contest(b: number, g: number, r: number, a: number) {\n    const multiplier = (255 * 4) << networkBiasShift;\n\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[ i ];\n      const dist = this._distance.calculateNormalized(n, { r, g, b, a }) * multiplier | 0;\n\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n\n      const biasdist = dist - ((this._bias[ i ]) >> (NeuQuant._initialBiasShift - networkBiasShift));\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = (this._freq[ i ] >> NeuQuant._betaShift);\n      this._freq[ i ] -= betafreq;\n      this._bias[ i ] += (betafreq << NeuQuant._gammaShift);\n    }\n    this._freq[ bestpos ] += NeuQuant._beta;\n    this._bias[ bestpos ] -= NeuQuant._betaGamma;\n    return bestbiaspos;\n  }\n}\n","/*\n * NeuQuantFloat Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\n * the algorithm.\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\n * this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons who\n * receive copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { ProgressTracker } from '../../utils';\n\n// bias for colour values\nconst networkBiasShift = 3;\n\nclass NeuronFloat {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n\n  constructor(defaultValue: number) {\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n\n  /**\n   * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n   * @example\n   * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\n   */\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\n  }\n\n  subtract(r: number, g: number, b: number, a: number) {\n    this.r -= r;\n    this.g -= g;\n    this.b -= b;\n    this.a -= a;\n  }\n}\n\nexport class NeuQuantFloat extends AbstractPaletteQuantizer {\n  /*\n   four primes near 500 - assume no image has a length so large\n   that it is divisible by all four primes\n   */\n  private static readonly _prime1: number = 499;\n  private static readonly _prime2: number = 491;\n  private static readonly _prime3: number = 487;\n  private static readonly _prime4: number = 503;\n  private static readonly _minpicturebytes: number = NeuQuantFloat._prime4;\n\n  // no. of learning cycles\n  private static readonly _nCycles: number = 100;\n\n  // defs for freq and bias\n  private static readonly _initialBiasShift: number = 16;\n\n  // bias for fractions\n  private static readonly _initialBias: number = (1 << NeuQuantFloat._initialBiasShift);\n  private static readonly _gammaShift: number = 10;\n\n  // gamma = 1024\n  // TODO: why gamma is never used?\n  // private static _gamma : number     = (1 << NeuQuantFloat._gammaShift);\n  private static readonly _betaShift: number = 10;\n  private static readonly _beta: number = (NeuQuantFloat._initialBias >> NeuQuantFloat._betaShift);\n\n  // beta = 1/1024\n  private static readonly _betaGamma: number = (NeuQuantFloat._initialBias << (NeuQuantFloat._gammaShift - NeuQuantFloat._betaShift));\n\n  /*\n   * for 256 cols, radius starts\n   */\n  private static readonly _radiusBiasShift: number = 6;\n\n  // at 32.0 biased by 6 bits\n  private static readonly _radiusBias: number = 1 << NeuQuantFloat._radiusBiasShift;\n\n  // and decreases by a factor of 1/30 each cycle\n  private static readonly _radiusDecrease: number = 30;\n\n  /* defs for decreasing alpha factor */\n\n  // alpha starts at 1.0\n  private static readonly _alphaBiasShift: number = 10;\n\n  // biased by 10 bits\n  private static readonly _initAlpha: number = (1 << NeuQuantFloat._alphaBiasShift);\n\n  /* radBias and alphaRadBias used for radpower calculation */\n  private static readonly _radBiasShift: number = 8;\n  private static readonly _radBias: number = 1 << NeuQuantFloat._radBiasShift;\n  private static readonly _alphaRadBiasShift: number = NeuQuantFloat._alphaBiasShift + NeuQuantFloat._radBiasShift;\n  private static readonly _alphaRadBias: number = 1 << NeuQuantFloat._alphaRadBiasShift;\n\n  private _pointArray!: Point[];\n  private readonly _networkSize!: number;\n  private _network!: NeuronFloat[];\n\n  /** sampling factor 1..30 */\n  private readonly _sampleFactor!: number;\n  private _radPower!: number[];\n\n  // bias and freq arrays for learning\n  private _freq!: number[];\n\n  /* for network lookup - really 256 */\n  private _bias!: number[];\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator, colors = 256) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n\n    this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\n  }\n\n  sample(pointContainer: PointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n\n  * quantize() {\n    this._init();\n    yield * this._learn();\n\n    yield {\n      palette: this._buildPalette(),\n      progress: 100,\n    };\n  }\n\n  private _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[ i ] = new NeuronFloat((i << (networkBiasShift + 8)) / this._networkSize);\n\n      // 1/this._networkSize\n      this._freq[ i ] = NeuQuantFloat._initialBias / this._networkSize;\n      this._bias[ i ] = 0;\n    }\n  }\n\n  /**\n   * Main Learning Loop\n   */\n  private * _learn(): IterableIterator<PaletteQuantizerYieldValue> {\n    let sampleFactor = this._sampleFactor;\n\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < NeuQuantFloat._minpicturebytes) sampleFactor = 1;\n\n    const alphadec = 30 + (sampleFactor - 1) / 3;\n    const pointsToSample = pointsNumber / sampleFactor;\n\n    let delta = pointsToSample / NeuQuantFloat._nCycles | 0;\n    let alpha = NeuQuantFloat._initAlpha;\n    let radius = (this._networkSize >> 3) * NeuQuantFloat._radiusBias;\n\n    let rad = radius >> NeuQuantFloat._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n\n    for (let i = 0; i < rad; i++) {\n      this._radPower[ i ] = alpha * (((rad * rad - i * i) * NeuQuantFloat._radBias) / (rad * rad));\n    }\n\n    let step: number;\n    if (pointsNumber < NeuQuantFloat._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % NeuQuantFloat._prime1 !== 0) {\n      step = NeuQuantFloat._prime1;\n    } else if ((pointsNumber % NeuQuantFloat._prime2) !== 0) {\n      step = NeuQuantFloat._prime2;\n    } else if ((pointsNumber % NeuQuantFloat._prime3) !== 0) {\n      step = NeuQuantFloat._prime3;\n    } else {\n      step = NeuQuantFloat._prime4;\n    }\n\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample;) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n\n      const point = this._pointArray[ pointIndex ];\n      const b = point.b << networkBiasShift;\n      const g = point.g << networkBiasShift;\n      const r = point.r << networkBiasShift;\n      const a = point.a << networkBiasShift;\n      const neuronIndex = this._contest(b, g, r, a);\n\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n\n      /* alter neighbours */\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n\n      if (delta === 0) delta = 1;\n\n      if (i % delta === 0) {\n        alpha -= (alpha / alphadec);\n        radius -= (radius / NeuQuantFloat._radiusDecrease);\n        rad = radius >> NeuQuantFloat._radiusBiasShift;\n\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) this._radPower[ j ] = alpha * (((rad * rad - j * j) * NeuQuantFloat._radBias) / (rad * rad));\n      }\n    }\n\n  }\n\n  private _buildPalette() {\n    const palette = new Palette();\n\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n\n    palette.sort();\n    return palette;\n  }\n\n  /**\n   * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\n   */\n  private _alterNeighbour(rad: number, i: number, b: number, g: number, r: number, al: number) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n\n    while (j < hi || k > lo) {\n      const a = this._radPower[ m++ ] / NeuQuantFloat._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[ j++ ];\n        p.subtract(\n          a * (p.r - r),\n          a * (p.g - g),\n          a * (p.b - b),\n          a * (p.a - al),\n        );\n      }\n\n      if (k > lo) {\n        const p = this._network[ k-- ];\n        p.subtract(\n          a * (p.r - r),\n          a * (p.g - g),\n          a * (p.b - b),\n          a * (p.a - al),\n        );\n      }\n    }\n  }\n\n  /**\n   * Move neuron i towards biased (b,g,r) by factor alpha\n   */\n  private _alterSingle(alpha: number, i: number, b: number, g: number, r: number, a: number) {\n    alpha /= NeuQuantFloat._initAlpha;\n\n    /* alter hit neuron */\n    const n = this._network[ i ];\n    n.subtract(\n      alpha * (n.r - r),\n      alpha * (n.g - g),\n      alpha * (n.b - b),\n      alpha * (n.a - a),\n    );\n  }\n\n  /**\n   * Search for biased BGR values\n   * description:\n   *    finds closest neuron (min dist) and updates freq\n   *    finds best neuron (min dist-bias) and returns position\n   *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\n   *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\n   *\n   * Original distance equation:\n   *        dist = abs(dR) + abs(dG) + abs(dB)\n   */\n  private _contest(b: number, g: number, r: number, al: number) {\n    const multiplier = (255 * 4) << networkBiasShift;\n\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[ i ];\n      const dist = this._distance.calculateNormalized(n, { r, g, b, a: al }) * multiplier;\n\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n\n      const biasdist = dist - ((this._bias[ i ]) >> (NeuQuantFloat._initialBiasShift - networkBiasShift));\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = (this._freq[ i ] >> NeuQuantFloat._betaShift);\n      this._freq[ i ] -= betafreq;\n      this._bias[ i ] += (betafreq << NeuQuantFloat._gammaShift);\n    }\n    this._freq[ bestpos ] += NeuQuantFloat._beta;\n    this._bias[ bestpos ] -= NeuQuantFloat._betaGamma;\n    return bestbiaspos;\n  }\n}\n","/*\n * Copyright (c) 2015, Leon Sorokin\n * All rights reserved. (MIT Licensed)\n *\n * ColorHistogram.js - an image quantization lib\n */\n\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * colorHistogram.ts - part of Image Quantization Library\n */\nimport { HueStatistics } from '../../utils/hueStatistics';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { stableSort } from '../../utils/arithmetic';\n\ninterface Box {\n  x: number;\n  y: number;\n  h: number;\n  w: number;\n}\n\nexport class ColorHistogram {\n  private static _boxSize = [64, 64];\n  private static _boxPixels = 2;\n  private static _hueGroups = 10;\n\n  // 1 = by global population, 2 = subregion population threshold\n  private _method: number;\n\n  // HueStatistics instance\n  private _hueStats: HueStatistics;\n\n  private _histogram: { [color: string]: number };\n\n  // # of highest-frequency colors to start with for palette reduction\n  private _initColors: number;\n\n  // if > 0, enables hues stats and min-color retention per group\n  private _minHueCols: number;\n\n  constructor(method: number, colors: number) {\n    // 1 = by global population, 2 = subregion population threshold\n    this._method = method;\n\n    // if > 0, enables hues stats and min-color retention per group\n    this._minHueCols = colors << 2;// opts.minHueCols || 0;\n\n    // # of highest-frequency colors to start with for palette reduction\n    this._initColors = colors << 2;\n\n    // HueStatistics instance\n    this._hueStats = new HueStatistics(ColorHistogram._hueGroups, this._minHueCols);\n\n    this._histogram = Object.create(null); // tslint:disable-line:no-null-keyword\n  }\n\n  sample(pointContainer: PointContainer) {\n    switch (this._method) {\n      case 1:\n        this._colorStats1D(pointContainer);\n        break;\n      case 2:\n        this._colorStats2D(pointContainer);\n        break;\n    }\n  }\n\n  getImportanceSortedColorsIDXI32() {\n    // TODO: fix typing issue in stableSort func\n    const sorted = stableSort(Object.keys(this._histogram), (a, b) => this._histogram[ b ] - this._histogram[ a ]);\n    if (sorted.length === 0) {\n      return [];\n    }\n\n    let idxi32: string[];\n    switch (this._method) {\n      case 1:\n        const initialColorsLimit = Math.min(sorted.length, this._initColors);\n        const last = sorted[ initialColorsLimit - 1 ];\n        const freq = this._histogram[ last ];\n\n        idxi32 = sorted.slice(0, initialColorsLimit);\n\n        // add any cut off colors with same freq as last\n        let pos = initialColorsLimit;\n        const len = sorted.length;\n        while (pos < len && this._histogram[ sorted[ pos ] ] === freq) {\n          idxi32.push(sorted[ pos++ ]);\n        }\n\n        // inject min huegroup colors\n        this._hueStats.injectIntoArray(idxi32);\n        break;\n\n      case 2:\n        idxi32 = sorted;\n        break;\n\n      default:\n        // TODO: rethink errors\n        throw new Error('Incorrect method');\n    }\n\n    // int32-ify values\n    return idxi32.map(function (v: string) { // TODO: why no-inferred-types rule cannot find this (v: string) ?\n      return +v;\n    });\n  }\n\n  // global top-population\n  private _colorStats1D(pointContainer: PointContainer) {\n    const histG = this._histogram;\n    const pointArray = pointContainer.getPointArray();\n    const len = pointArray.length;\n\n    for (let i = 0; i < len; i++) {\n      const col = pointArray[ i ].uint32;\n\n      // collect hue stats\n      this._hueStats.check(col);\n\n      if (col in histG) {\n        histG[ col ]++;\n      } else {\n        histG[ col ] = 1;\n      }\n    }\n  }\n\n  // population threshold within subregions\n  // FIXME: this can over-reduce (few/no colors same?), need a way to keep\n  // important colors that dont ever reach local thresholds (gradients?)\n  private _colorStats2D(pointContainer: PointContainer) {\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const pointArray = pointContainer.getPointArray();\n\n    const boxW = ColorHistogram._boxSize[ 0 ];\n    const boxH = ColorHistogram._boxSize[ 1 ];\n    const area = boxW * boxH;\n    const boxes = this._makeBoxes(width, height, boxW, boxH);\n    const histG = this._histogram;\n\n    boxes.forEach(box => {\n      let effc = Math.round((box.w * box.h) / area) * ColorHistogram._boxPixels;\n      if (effc < 2) effc = 2;\n\n      const histL: { [key: string ]: number } = {};\n      this._iterateBox(box, width, (i) => {\n        const col = pointArray[ i ].uint32;\n\n        // collect hue stats\n        this._hueStats.check(col);\n\n        if (col in histG) {\n          histG[ col ]++;\n        } else if (col in histL) {\n          if (++histL[ col ] >= effc) {\n            histG[ col ] = histL[ col ];\n          }\n        } else {\n          histL[ col ] = 1;\n        }\n      });\n    });\n\n    // inject min huegroup colors\n    this._hueStats.injectIntoDictionary(histG);\n\n  }\n\n  // iterates @bbox within a parent rect of width @wid; calls @fn, passing index within parent\n  private _iterateBox(bbox: Box, wid: number, fn: (i: number) => void) {\n    const b = bbox;\n    const i0 = b.y * wid + b.x;\n    const i1 = (b.y + b.h - 1) * wid + (b.x + b.w - 1);\n    const incr = wid - b.w + 1;\n\n    let cnt = 0;\n    let i = i0;\n\n    do {\n      fn.call(this, i);\n      i += (++cnt % b.w === 0) ? incr : 1;\n    } while (i <= i1);\n  }\n\n  /**\n   *    partitions a rectangle of width x height into\n   *    array of boxes stepX x stepY (or less)\n   */\n  private _makeBoxes(width: number, height: number, stepX: number, stepY: number) {\n    const wrem = width % stepX;\n    const  hrem = height % stepY;\n    const xend = width - wrem;\n    const yend = height - hrem;\n    const boxesArray: Box[] = [];\n\n    for (let y = 0; y < height; y += stepY) {\n      for (let x = 0; x < width; x += stepX) {\n        boxesArray.push({ x, y, w: (x === xend ? wrem : stepX), h: (y === yend ? hrem : stepY) });\n      }\n    }\n\n    return boxesArray;\n  }\n\n}\n","/*\n * Copyright (c) 2015, Leon Sorokin\n * All rights reserved. (MIT Licensed)\n *\n * RGBQuant.js - an image quantization lib\n */\n\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgbquant.ts - part of Image Quantization Library\n */\n\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { ColorHistogram } from './colorHistogram';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { stableSort } from '../../utils/arithmetic';\nimport { ProgressTracker } from '../../utils';\n\nclass RemovedColor {\n  readonly index: number;\n  readonly color: Point;\n  readonly distance: number;\n\n  constructor(index: number, color: Point, distance: number) {\n    this.index = index;\n    this.color = color;\n    this.distance = distance;\n  }\n}\n\n// TODO: make input/output image and input/output palettes with instances of class Point only!\nexport class RGBQuant extends AbstractPaletteQuantizer {\n  // desired final palette size\n  private readonly _colors: number;\n\n  // color-distance threshold for initial reduction pass\n  private readonly _initialDistance: number;\n\n  // subsequent passes threshold\n  private readonly _distanceIncrement: number;\n\n  // accumulated histogram\n  private readonly _histogram: ColorHistogram;\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator, colors = 256, method = 2) {\n    super();\n    this._distance = colorDistanceCalculator;\n    // desired final palette size\n    this._colors = colors;\n\n    // histogram to accumulate\n    this._histogram = new ColorHistogram(method, colors);\n\n    this._initialDistance = 0.01;\n    this._distanceIncrement = 0.005;\n  }\n\n  // gathers histogram info\n  sample(image: PointContainer) {\n    /*\n     var pointArray = image.getPointArray(), max = [0, 0, 0, 0], min = [255, 255, 255, 255];\n\n     for (var i = 0, l = pointArray.length; i < l; i++) {\n     var color = pointArray[i];\n     for (var componentIndex = 0; componentIndex < 4; componentIndex++) {\n     if (max[componentIndex] < color.rgba[componentIndex]) max[componentIndex] = color.rgba[componentIndex];\n     if (min[componentIndex] > color.rgba[componentIndex]) min[componentIndex] = color.rgba[componentIndex];\n     }\n     }\n     var rd = max[0] - min[0], gd = max[1] - min[1], bd = max[2] - min[2], ad = max[3] - min[3];\n     this._distance.setWhitePoint(rd, gd, bd, ad);\n\n     this._initialDistance = (Math.sqrt(rd * rd + gd * gd + bd * bd + ad * ad) / Math.sqrt(255 * 255 + 255 * 255 + 255 * 255)) * 0.01;\n     */\n\n    this._histogram.sample(image);\n  }\n\n  // reduces histogram to palette, remaps & memoizes reduced colors\n  * quantize() {\n    const idxi32 = this._histogram.getImportanceSortedColorsIDXI32();\n    if (idxi32.length === 0) {\n      throw new Error('No colors in image');\n    }\n\n    yield * this._buildPalette(idxi32);\n  }\n\n  // reduces similar colors from an importance-sorted Uint32 rgba array\n  private * _buildPalette(idxi32: number[]): IterableIterator<PaletteQuantizerYieldValue> {\n    // reduce histogram to create initial palette\n    // build full rgb palette\n    const palette = new Palette();\n    const colorArray = palette.getPointContainer().getPointArray();\n    const usageArray = new Array(idxi32.length); // tslint:disable-line:prefer-array-literal\n\n    for (let i = 0; i < idxi32.length; i++) {\n      colorArray.push(Point.createByUint32(idxi32[ i ]));\n      usageArray[ i ] = 1;\n    }\n\n    const len = colorArray.length;\n    const memDist: RemovedColor[] = [];\n\n    let palLen = len;\n    let thold = this._initialDistance;\n\n    // palette already at or below desired length\n    const tracker = new ProgressTracker(palLen - this._colors, 99);\n    while (palLen > this._colors) {\n      memDist.length = 0;\n\n      // iterate palette\n      for (let i = 0; i < len; i++) {\n        if (tracker.shouldNotify(len - palLen)) {\n          yield {\n            progress: tracker.progress,\n          };\n        }\n\n        if (usageArray[ i ] === 0) continue;\n        const pxi = colorArray[ i ];\n        // if (!pxi) continue;\n\n        for (let j = i + 1; j < len; j++) {\n          if (usageArray[ j ] === 0) continue;\n          const pxj = colorArray[ j ];\n          // if (!pxj) continue;\n\n          const dist = this._distance.calculateNormalized(pxi, pxj);\n          if (dist < thold) {\n            // store index,rgb,dist\n            memDist.push(new RemovedColor(j, pxj, dist));\n            usageArray[ j ] = 0;\n            palLen--;\n          }\n        }\n      }\n      // palette reduction pass\n      // console.log(\"palette length: \" + palLen);\n\n      // if palette is still much larger than target, increment by larger initDist\n      thold += (palLen > this._colors * 3) ? this._initialDistance : this._distanceIncrement;\n    }\n\n    // if palette is over-reduced, re-add removed colors with largest distances from last round\n    if (palLen < this._colors) {\n      // sort descending\n      stableSort(memDist, function (a: RemovedColor, b: RemovedColor) {\n        return b.distance - a.distance;\n      });\n\n      let k = 0;\n      while (palLen < this._colors && k < memDist.length) {\n        const removedColor = memDist[ k ];\n        // re-inject rgb into final palette\n        usageArray[ removedColor.index ] = 1;\n        palLen++;\n        k++;\n      }\n    }\n\n    let colors = colorArray.length;\n    for (let colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\n      if (usageArray[ colorIndex ] === 0) {\n        if (colorIndex !== colors - 1) {\n          colorArray[ colorIndex ] = colorArray[ colors - 1 ];\n        }\n        --colors;\n      }\n    }\n    colorArray.length = colors;\n\n    palette.sort();\n\n    yield {\n      palette,\n      progress: 100,\n    };\n  }\n\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * wuQuant.ts - part of Image Quantization Library\n */\nimport { Palette } from '../../utils/palette';\nimport { Point } from '../../utils/point';\nimport { PointContainer } from '../../utils/pointContainer';\nimport { AbstractDistanceCalculator } from '../../distance/distanceCalculator';\nimport { AbstractPaletteQuantizer } from '../paletteQuantizer';\nimport { PaletteQuantizerYieldValue } from '../paletteQuantizerYieldValue';\nimport { ProgressTracker } from '../../utils';\n\nfunction createArray1D(dimension1: number) {\n  const a: number[] = [];\n  for (let k = 0; k < dimension1; k++) {\n    a[ k ] = 0;\n  }\n  return a;\n}\n\nfunction createArray4D(dimension1: number, dimension2: number, dimension3: number, dimension4: number): number[][][][] {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[ i ] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[ i ][ j ] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[ i ][ j ][ k ] = new Array(dimension4);\n        for (let l = 0; l < dimension4; l++) {\n          a[ i ][ j ][ k ][ l ] = 0;\n        }\n      }\n    }\n  }\n  return a;\n}\n\nfunction createArray3D(dimension1: number, dimension2: number, dimension3: number): number[][][] {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[ i ] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[ i ][ j ] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[ i ][ j ][ k ] = 0;\n      }\n    }\n  }\n  return a;\n}\n\nfunction fillArray3D<T>(a: T[][][], dimension1: number, dimension2: number, dimension3: number, value: T) {\n  for (let i = 0; i < dimension1; i++) {\n    a[ i ] = [];\n    for (let j = 0; j < dimension2; j++) {\n      a[ i ][ j ] = [];\n      for (let k = 0; k < dimension3; k++) {\n        a[ i ][ j ][ k ] = value;\n      }\n    }\n  }\n}\n\nfunction fillArray1D<T>(a: T[], dimension1: number, value: T) {\n  for (let i = 0; i < dimension1; i++) {\n    a[ i ] = value;\n  }\n}\n\nexport class WuColorCube {\n  redMinimum!: number;\n  redMaximum!: number;\n  greenMinimum!: number;\n  greenMaximum!: number;\n  blueMinimum!: number;\n  blueMaximum!: number;\n  volume!: number;\n  alphaMinimum!: number;\n  alphaMaximum!: number;\n}\n\nexport class WuQuant extends AbstractPaletteQuantizer {\n\n  private static readonly _alpha = 3;\n  private static readonly _red = 2;\n  private static readonly _green = 1;\n  private static readonly _blue = 0;\n\n  private _reds!: number[];\n  private _greens!: number[];\n  private _blues!: number[];\n  private _alphas!: number[];\n  private _sums!: number[];\n\n  private _weights!: number[][][][];\n  private _momentsRed!: number[][][][];\n  private _momentsGreen!: number[][][][];\n  private _momentsBlue!: number[][][][];\n  private _momentsAlpha!: number[][][][];\n  private _moments!: number[][][][];\n  private _table!: number[];\n  private _pixels!: Point[];\n\n  private _cubes!: WuColorCube[];\n  private _colors!: number;\n\n  private _significantBitsPerChannel!: number;\n  private _maxSideIndex!: number;\n  private _alphaMaxSideIndex!: number;\n  private _sideSize!: number;\n  private _alphaSideSize!: number;\n\n  private readonly _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator, colors = 256, significantBitsPerChannel = 5) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._setQuality(significantBitsPerChannel);\n    this._initialize(colors);\n  }\n\n  sample(image: PointContainer) {\n    const pointArray = image.getPointArray();\n\n    for (let i = 0, l = pointArray.length; i < l; i++) {\n      this._addColor(pointArray[ i ]);\n    }\n\n    this._pixels = this._pixels.concat(pointArray);\n  }\n\n  * quantize() {\n    yield * this._preparePalette();\n\n    const palette = new Palette();\n\n    // generates palette\n    for (let paletteIndex = 0; paletteIndex < this._colors; paletteIndex++) {\n      if (this._sums[ paletteIndex ] > 0) {\n        const sum = this._sums[ paletteIndex ];\n        const r = this._reds[ paletteIndex ] / sum;\n        const g = this._greens[ paletteIndex ] / sum;\n        const b = this._blues[ paletteIndex ] / sum;\n        const a = this._alphas[ paletteIndex ] / sum;\n\n        const color = Point.createByRGBA(r | 0, g | 0, b | 0, a | 0);\n        palette.add(color);\n      }\n    }\n\n    palette.sort();\n\n    yield {\n      palette,\n      progress: 100,\n    };\n  }\n\n  private * _preparePalette() {\n    // preprocess the colors\n    yield * this._calculateMoments();\n\n    let next = 0;\n    const volumeVariance = createArray1D(this._colors);\n\n    // processes the cubes\n    for (let cubeIndex = 1; cubeIndex < this._colors; ++cubeIndex) {\n      // if cut is possible; make it\n      if (this._cut(this._cubes[ next ], this._cubes[ cubeIndex ])) {\n        volumeVariance[ next ] = this._cubes[ next ].volume > 1 ? this._calculateVariance(this._cubes[ next ]) : 0.0;\n        volumeVariance[ cubeIndex ] = this._cubes[ cubeIndex ].volume > 1 ? this._calculateVariance(this._cubes[ cubeIndex ]) : 0.0;\n      } else {\n        // the cut was not possible, revert the index\n        volumeVariance[ next ] = 0.0;\n        cubeIndex--;\n      }\n\n      next = 0;\n      let temp = volumeVariance[ 0 ];\n\n      for (let index = 1; index <= cubeIndex; ++index) {\n        if (volumeVariance[ index ] > temp) {\n          temp = volumeVariance[ index ];\n          next = index;\n        }\n      }\n\n      if (temp <= 0.0) {\n        this._colors = cubeIndex + 1;\n        break;\n      }\n    }\n\n    const lookupRed: number[] = [];\n    const lookupGreen: number[] = [];\n    const lookupBlue: number[] = [];\n    const lookupAlpha: number[] = [];\n\n    // precalculates lookup tables\n    for (let k = 0; k < this._colors; ++k) {\n\n      const weight = WuQuant._volume(this._cubes[ k ], this._weights);\n\n      if (weight > 0) {\n        lookupRed[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsRed) / weight) | 0;\n        lookupGreen[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsGreen) / weight) | 0;\n        lookupBlue[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsBlue) / weight) | 0;\n        lookupAlpha[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsAlpha) / weight) | 0;\n      } else {\n        lookupRed[ k ] = 0;\n        lookupGreen[ k ] = 0;\n        lookupBlue[ k ] = 0;\n        lookupAlpha[ k ] = 0;\n      }\n    }\n\n    this._reds = createArray1D(this._colors + 1);\n    this._greens = createArray1D(this._colors + 1);\n    this._blues = createArray1D(this._colors + 1);\n    this._alphas = createArray1D(this._colors + 1);\n    this._sums = createArray1D(this._colors + 1);\n\n    // scans and adds colors\n    for (let index = 0, l = this._pixels.length; index < l; index++) {\n      const color = this._pixels[ index ];\n\n      const match = -1;\n\n      let bestMatch = match;\n      let bestDistance = Number.MAX_VALUE;\n\n      for (let lookup = 0; lookup < this._colors; lookup++) {\n        const foundRed = lookupRed[ lookup ];\n        const foundGreen = lookupGreen[ lookup ];\n        const foundBlue = lookupBlue[ lookup ];\n        const foundAlpha = lookupAlpha[ lookup ];\n\n        const distance = this._distance.calculateRaw(foundRed, foundGreen, foundBlue, foundAlpha, color.r, color.g, color.b, color.a);\n\n        if (distance < bestDistance) {\n          bestDistance = distance;\n          bestMatch = lookup;\n        }\n      }\n\n      this._reds[ bestMatch ] += color.r;\n      this._greens[ bestMatch ] += color.g;\n      this._blues[ bestMatch ] += color.b;\n      this._alphas[ bestMatch ] += color.a;\n      this._sums[ bestMatch ]++;\n    }\n  }\n\n  private _addColor(color: Point) {\n    const bitsToRemove = 8 - this._significantBitsPerChannel;\n    const indexRed = (color.r >> bitsToRemove) + 1;\n    const indexGreen = (color.g >> bitsToRemove) + 1;\n    const indexBlue = (color.b >> bitsToRemove) + 1;\n    const indexAlpha = (color.a >> bitsToRemove) + 1;\n\n    // if(color.a > 10) {\n    this._weights[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ]++;\n    this._momentsRed[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.r;\n    this._momentsGreen[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.g;\n    this._momentsBlue[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.b;\n    this._momentsAlpha[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.a;\n    this._moments[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += this._table[ color.r ] + this._table[ color.g ] + this._table[ color.b ] + this._table[ color.a ];\n    // }\n  }\n\n  /**\n   * Converts the histogram to a series of _moments.\n   */\n  private * _calculateMoments(): IterableIterator<PaletteQuantizerYieldValue> {\n    const area: number[] = [];\n    const areaRed: number[] = [];\n    const areaGreen: number[] = [];\n    const areaBlue: number[] = [];\n    const areaAlpha: number[] = [];\n    const area2: number[] = [];\n\n    const xarea = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaRed = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaGreen = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaBlue = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaAlpha = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xarea2 = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n\n    let trackerProgress = 0;\n    const tracker = new ProgressTracker(this._alphaMaxSideIndex * this._maxSideIndex, 99);\n\n    for (let alphaIndex = 1; alphaIndex <= this._alphaMaxSideIndex; ++alphaIndex) {\n      fillArray3D<number>(xarea, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D<number>(xareaRed, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D<number>(xareaGreen, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D<number>(xareaBlue, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D<number>(xareaAlpha, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D<number>(xarea2, this._sideSize, this._sideSize, this._sideSize, 0);\n\n      for (let redIndex = 1; redIndex <= this._maxSideIndex; ++redIndex, ++trackerProgress) {\n        if (tracker.shouldNotify(trackerProgress)) {\n          yield {\n            progress: tracker.progress,\n          };\n        }\n\n        fillArray1D<number>(area, this._sideSize, 0);\n        fillArray1D<number>(areaRed, this._sideSize, 0);\n        fillArray1D<number>(areaGreen, this._sideSize, 0);\n        fillArray1D<number>(areaBlue, this._sideSize, 0);\n        fillArray1D<number>(areaAlpha, this._sideSize, 0);\n        fillArray1D<number>(area2, this._sideSize, 0);\n\n        for (let greenIndex = 1; greenIndex <= this._maxSideIndex; ++greenIndex) {\n          let line = 0;\n          let lineRed = 0;\n          let lineGreen = 0;\n          let lineBlue = 0;\n          let lineAlpha = 0;\n          let line2 = 0.0;\n\n          for (let blueIndex = 1; blueIndex <= this._maxSideIndex; ++blueIndex) {\n            line += this._weights[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\n            lineRed += this._momentsRed[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\n            lineGreen += this._momentsGreen[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\n            lineBlue += this._momentsBlue[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\n            lineAlpha += this._momentsAlpha[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\n            line2 += this._moments[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\n\n            area[ blueIndex ] += line;\n            areaRed[ blueIndex ] += lineRed;\n            areaGreen[ blueIndex ] += lineGreen;\n            areaBlue[ blueIndex ] += lineBlue;\n            areaAlpha[ blueIndex ] += lineAlpha;\n            area2[ blueIndex ] += line2;\n\n            xarea[ redIndex ][ greenIndex ][ blueIndex ] = xarea[ redIndex - 1 ][ greenIndex ][ blueIndex ] + area[ blueIndex ];\n            xareaRed[ redIndex ][ greenIndex ][ blueIndex ] = xareaRed[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaRed[ blueIndex ];\n            xareaGreen[ redIndex ][ greenIndex ][ blueIndex ] = xareaGreen[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaGreen[ blueIndex ];\n            xareaBlue[ redIndex ][ greenIndex ][ blueIndex ] = xareaBlue[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaBlue[ blueIndex ];\n            xareaAlpha[ redIndex ][ greenIndex ][ blueIndex ] = xareaAlpha[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaAlpha[ blueIndex ];\n            xarea2[ redIndex ][ greenIndex ][ blueIndex ] = xarea2[ redIndex - 1 ][ greenIndex ][ blueIndex ] + area2[ blueIndex ];\n\n            this._weights[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._weights[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xarea[ redIndex ][ greenIndex ][ blueIndex ];\n            this._momentsRed[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsRed[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaRed[ redIndex ][ greenIndex ][ blueIndex ];\n            this._momentsGreen[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsGreen[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaGreen[ redIndex ][ greenIndex ][ blueIndex ];\n            this._momentsBlue[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsBlue[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaBlue[ redIndex ][ greenIndex ][ blueIndex ];\n            this._momentsAlpha[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsAlpha[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaAlpha[ redIndex ][ greenIndex ][ blueIndex ];\n            this._moments[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._moments[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xarea2[ redIndex ][ greenIndex ][ blueIndex ];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Computes the volume of the cube in a specific moment.\n   */\n  private static _volumeFloat(cube: WuColorCube, moment: number[][][][]) {\n    return (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] -\n      moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\n      moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\n      moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] -\n      moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] +\n      moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\n      moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\n      moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\n\n      (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n      moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n      moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n      moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\n      moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n      moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n      moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] -\n      moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\n  }\n\n  /**\n   * Computes the volume of the cube in a specific moment.\n   */\n  private static _volume(cube: WuColorCube, moment: number[][][][]) {\n    return WuQuant._volumeFloat(cube, moment) | 0;\n  }\n\n  /**\n   * Splits the cube in given position][and color direction.\n   */\n  private static _top(cube: WuColorCube, direction: number, position: number, moment: number[][][][]) {\n    let result: number;\n    switch (direction) {\n      case WuQuant._alpha:\n        result = (moment[ position ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] -\n          moment[ position ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\n          moment[ position ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\n          moment[ position ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\n          (moment[ position ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n          moment[ position ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\n          moment[ position ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n          moment[ position ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\n        break;\n\n      case WuQuant._red:\n        result = (moment[ cube.alphaMaximum ][ position ][ cube.greenMaximum ][ cube.blueMaximum ] -\n          moment[ cube.alphaMaximum ][ position ][ cube.greenMinimum ][ cube.blueMaximum ] -\n          moment[ cube.alphaMinimum ][ position ][ cube.greenMaximum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMinimum ][ position ][ cube.greenMinimum ][ cube.blueMaximum ]) -\n          (moment[ cube.alphaMaximum ][ position ][ cube.greenMaximum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMaximum ][ position ][ cube.greenMinimum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMinimum ][ position ][ cube.greenMaximum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ position ][ cube.greenMinimum ][ cube.blueMinimum ]);\n        break;\n\n      case WuQuant._green:\n        result = (moment[ cube.alphaMaximum ][ cube.redMaximum ][ position ][ cube.blueMaximum ] -\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ position ][ cube.blueMaximum ] -\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ position ][ cube.blueMaximum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ position ][ cube.blueMaximum ]) -\n          (moment[ cube.alphaMaximum ][ cube.redMaximum ][ position ][ cube.blueMinimum ] -\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ position ][ cube.blueMinimum ] -\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ position ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ position ][ cube.blueMinimum ]);\n        break;\n\n      case WuQuant._blue:\n        result = (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ position ] -\n          moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ position ] -\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ position ] +\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ position ]) -\n          (moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ position ] -\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ position ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ position ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ position ]);\n        break;\n      default:\n        throw new Error('impossible');\n    }\n\n    return result | 0;\n  }\n\n  /**\n   * Splits the cube in a given color direction at its minimum.\n   */\n  private static _bottom(cube: WuColorCube, direction: number, moment: number[][][][]) {\n    switch (direction) {\n      case WuQuant._alpha:\n        return (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\n          (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\n\n      case WuQuant._red:\n        return (-moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\n          (-moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\n\n      case WuQuant._green:\n        return (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] +\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\n          (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\n\n      case WuQuant._blue:\n        return (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]) -\n          (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\n          moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\n\n      default:\n        // TODO: why here is return 0, and in this._top there is no default at all (now it is throw error)?\n        return 0;\n    }\n  }\n\n  /**\n   * Calculates statistical variance for a given cube.\n   */\n  private  _calculateVariance(cube: WuColorCube) {\n    const volumeRed = WuQuant._volume(cube, this._momentsRed);\n    const volumeGreen = WuQuant._volume(cube, this._momentsGreen);\n    const volumeBlue = WuQuant._volume(cube, this._momentsBlue);\n    const volumeAlpha = WuQuant._volume(cube, this._momentsAlpha);\n    const volumeMoment = WuQuant._volumeFloat(cube, this._moments);\n    const volumeWeight = WuQuant._volume(cube, this._weights);\n    const distance = volumeRed * volumeRed + volumeGreen * volumeGreen + volumeBlue * volumeBlue + volumeAlpha * volumeAlpha;\n\n    return volumeMoment - (distance / volumeWeight);\n  }\n\n  /**\n   * Finds the optimal (maximal) position for the cut.\n   */\n  private _maximize(cube: WuColorCube, direction: number, first: number, last: number, wholeRed: number, wholeGreen: number, wholeBlue: number, wholeAlpha: number, wholeWeight: number) {\n    const bottomRed = WuQuant._bottom(cube, direction, this._momentsRed) | 0;\n    const bottomGreen = WuQuant._bottom(cube, direction, this._momentsGreen) | 0;\n    const bottomBlue = WuQuant._bottom(cube, direction, this._momentsBlue) | 0;\n    const bottomAlpha = WuQuant._bottom(cube, direction, this._momentsAlpha) | 0;\n    const bottomWeight = WuQuant._bottom(cube, direction, this._weights) | 0;\n\n    let result = 0.0;\n    let cutPosition = -1;\n\n    for (let position = first; position < last; ++position) {\n      // determines the cube cut at a certain position\n      let halfRed = bottomRed + WuQuant._top(cube, direction, position, this._momentsRed);\n      let halfGreen = bottomGreen + WuQuant._top(cube, direction, position, this._momentsGreen);\n      let halfBlue = bottomBlue + WuQuant._top(cube, direction, position, this._momentsBlue);\n      let halfAlpha = bottomAlpha + WuQuant._top(cube, direction, position, this._momentsAlpha);\n      let halfWeight = bottomWeight + WuQuant._top(cube, direction, position, this._weights);\n\n      // the cube cannot be cut at bottom (this would lead to empty cube)\n      if (halfWeight !== 0) {\n        let halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\n        let temp = halfDistance / halfWeight;\n\n        halfRed = wholeRed - halfRed;\n        halfGreen = wholeGreen - halfGreen;\n        halfBlue = wholeBlue - halfBlue;\n        halfAlpha = wholeAlpha - halfAlpha;\n        halfWeight = wholeWeight - halfWeight;\n\n        if (halfWeight !== 0) {\n          halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\n          temp += halfDistance / halfWeight;\n\n          if (temp > result) {\n            result = temp;\n            cutPosition = position;\n          }\n        }\n      }\n    }\n\n    return { max: result, position: cutPosition };\n  }\n\n  // Cuts a cube with another one.\n  private _cut(first: WuColorCube, second: WuColorCube) {\n    let direction: number;\n\n    const wholeRed = WuQuant._volume(first, this._momentsRed);\n    const wholeGreen = WuQuant._volume(first, this._momentsGreen);\n    const wholeBlue = WuQuant._volume(first, this._momentsBlue);\n    const wholeAlpha = WuQuant._volume(first, this._momentsAlpha);\n    const wholeWeight = WuQuant._volume(first, this._weights);\n\n    const red = this._maximize(first, WuQuant._red, first.redMinimum + 1, first.redMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const green = this._maximize(first, WuQuant._green, first.greenMinimum + 1, first.greenMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const blue = this._maximize(first, WuQuant._blue, first.blueMinimum + 1, first.blueMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const alpha = this._maximize(first, WuQuant._alpha, first.alphaMinimum + 1, first.alphaMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n\n    if (alpha.max >= red.max && alpha.max >= green.max && alpha.max >= blue.max) {\n      direction = WuQuant._alpha;\n\n      // cannot split empty cube\n      if (alpha.position < 0) return false;\n    } else {\n      if (red.max >= alpha.max && red.max >= green.max && red.max >= blue.max) {\n        direction = WuQuant._red;\n      } else if (green.max >= alpha.max && green.max >= red.max && green.max >= blue.max) {\n        direction = WuQuant._green;\n      } else {\n        direction = WuQuant._blue;\n      }\n    }\n\n    second.redMaximum = first.redMaximum;\n    second.greenMaximum = first.greenMaximum;\n    second.blueMaximum = first.blueMaximum;\n    second.alphaMaximum = first.alphaMaximum;\n\n    // cuts in a certain direction\n    switch (direction) {\n      case WuQuant._red:\n        second.redMinimum = first.redMaximum = red.position;\n        second.greenMinimum = first.greenMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n\n      case WuQuant._green:\n        second.greenMinimum = first.greenMaximum = green.position;\n        second.redMinimum = first.redMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n\n      case WuQuant._blue:\n        second.blueMinimum = first.blueMaximum = blue.position;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n\n      case WuQuant._alpha:\n        second.alphaMinimum = first.alphaMaximum = alpha.position;\n        second.blueMinimum = first.blueMinimum;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        break;\n    }\n\n    // determines the volumes after cut\n    first.volume = (first.redMaximum - first.redMinimum) * (first.greenMaximum - first.greenMinimum) * (first.blueMaximum - first.blueMinimum) * (first.alphaMaximum - first.alphaMinimum);\n    second.volume = (second.redMaximum - second.redMinimum) * (second.greenMaximum - second.greenMinimum) * (second.blueMaximum - second.blueMinimum) * (second.alphaMaximum - second.alphaMinimum);\n\n    // the cut was successful\n    return true;\n  }\n\n  private _initialize(colors: number) {\n    this._colors = colors;\n\n    // creates all the _cubes\n    this._cubes = [];\n\n    // initializes all the _cubes\n    for (let cubeIndex = 0; cubeIndex < colors; cubeIndex++) {\n      this._cubes[ cubeIndex ] = new WuColorCube();\n    }\n\n    // resets the reference minimums\n    this._cubes[ 0 ].redMinimum = 0;\n    this._cubes[ 0 ].greenMinimum = 0;\n    this._cubes[ 0 ].blueMinimum = 0;\n    this._cubes[ 0 ].alphaMinimum = 0;\n\n    // resets the reference maximums\n    this._cubes[ 0 ].redMaximum = this._maxSideIndex;\n    this._cubes[ 0 ].greenMaximum = this._maxSideIndex;\n    this._cubes[ 0 ].blueMaximum = this._maxSideIndex;\n    this._cubes[ 0 ].alphaMaximum = this._alphaMaxSideIndex;\n\n    this._weights = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsRed = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsGreen = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsBlue = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsAlpha = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._moments = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n\n    this._table = [];\n    for (let tableIndex = 0; tableIndex < 256; ++tableIndex) {\n      this._table[ tableIndex ] = tableIndex * tableIndex;\n    }\n\n    this._pixels = [];\n  }\n\n  private _setQuality(significantBitsPerChannel = 5) {\n    this._significantBitsPerChannel = significantBitsPerChannel;\n    this._maxSideIndex = 1 << this._significantBitsPerChannel;\n    this._alphaMaxSideIndex = this._maxSideIndex;\n\n    this._sideSize = this._maxSideIndex + 1;\n    this._alphaSideSize = this._alphaMaxSideIndex + 1;\n  }\n\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { AbstractPaletteQuantizer } from './paletteQuantizer';\nexport { NeuQuant } from './neuquant/neuquant';\nexport { NeuQuantFloat } from './neuquant/neuquantFloat';\nexport { RGBQuant } from './rgbquant/rgbquant';\nexport { ColorHistogram } from './rgbquant/colorHistogram';\nexport { WuQuant, WuColorCube } from './wu/wuQuant';\nexport { PaletteQuantizerYieldValue } from './paletteQuantizerYieldValue';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\n\nexport abstract class AbstractImageQuantizer {\n  abstract quantize(pointContainer: PointContainer, palette: Palette): IterableIterator<ImageQuantizerYieldValue>;\n\n  quantizeSync(pointContainer: PointContainer, palette: Palette) {\n    for (const value of this.quantize(pointContainer, palette)) {\n      if (value.pointContainer) {\n        return value.pointContainer;\n      }\n    }\n\n    throw new Error('unreachable');\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * nearestColor.ts - part of Image Quantization Library\n */\nimport { AbstractImageQuantizer } from './imageQuantizer';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\nimport { ProgressTracker } from '../utils/progressTracker';\n\nexport class NearestColor extends AbstractImageQuantizer {\n  private _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator) {\n    super();\n    this._distance = colorDistanceCalculator;\n  }\n\n  /**\n   * Mutates pointContainer\n   */\n  * quantize(pointContainer: PointContainer, palette: Palette): IterableIterator<ImageQuantizerYieldValue> {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n\n    const tracker = new ProgressTracker(height, 99);\n    for (let y = 0; y < height; y++) {\n      if (tracker.shouldNotify(y)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n      for (let x = 0, idx = y * width; x < width; x++, idx++) {\n        // Image pixel\n        const point = pointArray[ idx ];\n        // Reduced pixel\n        point.from(palette.getNearestColor(this._distance, point));\n      }\n    }\n\n    yield {\n      pointContainer,\n      progress: 100,\n    };\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\n */\nimport { AbstractImageQuantizer } from './imageQuantizer';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { Point } from '../utils/point';\nimport { inRange0to255Rounded } from '../utils/arithmetic';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\nimport { ProgressTracker } from '../utils/progressTracker';\n\n// TODO: is it the best name for this enum \"kernel\"?\nexport enum ErrorDiffusionArrayKernel {\n  FloydSteinberg = 0,\n  FalseFloydSteinberg,\n  Stucki,\n  Atkinson,\n  Jarvis,\n  Burkes,\n  Sierra,\n  TwoSierra,\n  SierraLite,\n}\n\n// http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\nexport class ErrorDiffusionArray extends AbstractImageQuantizer {\n  private _minColorDistance: number;\n  private _serpentine: boolean;\n  private _kernel!: number[][];\n  /** true = GIMP, false = XNVIEW */\n  private _calculateErrorLikeGIMP: boolean;\n\n  private _distance: AbstractDistanceCalculator;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator, kernel: ErrorDiffusionArrayKernel, serpentine = true, minimumColorDistanceToDither = 0, calculateErrorLikeGIMP = false) {\n    super();\n    this._setKernel(kernel);\n\n    this._distance = colorDistanceCalculator;\n    this._minColorDistance = minimumColorDistanceToDither;\n    this._serpentine = serpentine;\n    this._calculateErrorLikeGIMP = calculateErrorLikeGIMP;\n  }\n\n  /**\n   * adapted from http://jsbin.com/iXofIji/2/edit by PAEz\n   * fixed version. it doesn't use image pixels as error storage, also it doesn't have 0.3 + 0.3 + 0.3 + 0.3 = 0 error\n   * Mutates pointContainer\n   */\n  * quantize(pointContainer: PointContainer, palette: Palette): IterableIterator<ImageQuantizerYieldValue> {\n    const pointArray = pointContainer.getPointArray();\n    const originalPoint = new Point();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorLines: number[][][] = [];\n\n    let dir = 1;\n    let maxErrorLines = 1;\n\n    // initial error lines (number is taken from dithering kernel)\n    for (const kernel of this._kernel) {\n      const kernelErrorLines = kernel[ 2 ] + 1;\n      if (maxErrorLines < kernelErrorLines) maxErrorLines = kernelErrorLines;\n    }\n    for (let i = 0; i < maxErrorLines; i++) {\n      this._fillErrorLine(errorLines[ i ] = [], width);\n    }\n\n    const tracker = new ProgressTracker(height, 99);\n    for (let y = 0; y < height; y++) {\n      if (tracker.shouldNotify(y)) {\n        yield {\n          progress: tracker.progress,\n        };\n      }\n\n      // always serpentine\n      if (this._serpentine) dir = dir * -1;\n\n      const lni = y * width;\n      const xStart = dir === 1 ? 0 : width - 1;\n      const xEnd = dir === 1 ? width : -1;\n\n      // cyclic shift with erasing\n      this._fillErrorLine(errorLines[ 0 ], width);\n      // TODO: why it is needed to cast types here?\n      errorLines.push(errorLines.shift() as number[][]);\n\n      const errorLine = errorLines[ 0 ];\n      for (let x = xStart, idx = lni + xStart; x !== xEnd; x += dir, idx += dir) {\n        // Image pixel\n        const point = pointArray[ idx ];\n        // originalPoint = new Utils.Point(),\n        const error = errorLine[ x ];\n\n        originalPoint.from(point);\n\n        const correctedPoint = Point.createByRGBA(\n          inRange0to255Rounded(point.r + error[ 0 ]),\n          inRange0to255Rounded(point.g + error[ 1 ]),\n          inRange0to255Rounded(point.b + error[ 2 ]),\n          inRange0to255Rounded(point.a + error[ 3 ]),\n        );\n\n        // Reduced pixel\n        const palettePoint = palette.getNearestColor(this._distance, correctedPoint);\n        point.from(palettePoint);\n\n        // dithering strength\n        if (this._minColorDistance) {\n          const dist = this._distance.calculateNormalized(point, palettePoint);\n          if (dist < this._minColorDistance) continue;\n        }\n\n        // Component distance\n        let er: number;\n        let eg: number;\n        let eb: number;\n        let ea: number;\n        if (this._calculateErrorLikeGIMP) {\n          er = correctedPoint.r - palettePoint.r;\n          eg = correctedPoint.g - palettePoint.g;\n          eb = correctedPoint.b - palettePoint.b;\n          ea = correctedPoint.a - palettePoint.a;\n        } else {\n          er = originalPoint.r - palettePoint.r;\n          eg = originalPoint.g - palettePoint.g;\n          eb = originalPoint.b - palettePoint.b;\n          ea = originalPoint.a - palettePoint.a;\n        }\n\n        const dStart = dir === 1 ? 0 : this._kernel.length - 1;\n        const dEnd = dir === 1 ? this._kernel.length : -1;\n\n        for (let i = dStart; i !== dEnd; i += dir) {\n          const x1 = this._kernel[ i ][ 1 ] * dir;\n          const y1 = this._kernel[ i ][ 2 ];\n\n          if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\n            const d = this._kernel[ i ][ 0 ];\n            const e = errorLines[ y1 ][ x1 + x ];\n\n            e[ 0 ] = e[ 0 ] + er * d;\n            e[ 1 ] = e[ 1 ] + eg * d;\n            e[ 2 ] = e[ 2 ] + eb * d;\n            e[ 3 ] = e[ 3 ] + ea * d;\n          }\n        }\n      }\n    }\n\n    yield {\n      pointContainer,\n      progress: 100,\n    };\n  }\n\n  private _fillErrorLine(errorLine: number[][], width: number) {\n    // shrink\n    if (errorLine.length > width) {\n      errorLine.length = width;\n    }\n\n    // reuse existing arrays\n    const l = errorLine.length;\n    for (let i = 0; i < l; i++) {\n      const error = errorLine[ i ];\n      error[ 0 ] = error[ 1 ] = error[ 2 ] = error[ 3 ] = 0;\n    }\n\n    // create missing arrays\n    for (let i = l; i < width; i++) {\n      errorLine[ i ] = [0.0, 0.0, 0.0, 0.0];\n    }\n  }\n\n  private _setKernel(kernel: ErrorDiffusionArrayKernel) {\n    switch (kernel) {\n      case ErrorDiffusionArrayKernel.FloydSteinberg:\n        this._kernel = [\n          [7 / 16, 1, 0],\n          [3 / 16, -1, 1],\n          [5 / 16, 0, 1],\n          [1 / 16, 1, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.FalseFloydSteinberg:\n        this._kernel = [\n          [3 / 8, 1, 0],\n          [3 / 8, 0, 1],\n          [2 / 8, 1, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Stucki:\n        this._kernel = [\n          [8 / 42, 1, 0],\n          [4 / 42, 2, 0],\n          [2 / 42, -2, 1],\n          [4 / 42, -1, 1],\n          [8 / 42, 0, 1],\n          [4 / 42, 1, 1],\n          [2 / 42, 2, 1],\n          [1 / 42, -2, 2],\n          [2 / 42, -1, 2],\n          [4 / 42, 0, 2],\n          [2 / 42, 1, 2],\n          [1 / 42, 2, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Atkinson:\n        this._kernel = [\n          [1 / 8, 1, 0],\n          [1 / 8, 2, 0],\n          [1 / 8, -1, 1],\n          [1 / 8, 0, 1],\n          [1 / 8, 1, 1],\n          [1 / 8, 0, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Jarvis:\n        this._kernel = [\t\t\t// Jarvis, Judice, and Ninke / JJN?\n          [7 / 48, 1, 0],\n          [5 / 48, 2, 0],\n          [3 / 48, -2, 1],\n          [5 / 48, -1, 1],\n          [7 / 48, 0, 1],\n          [5 / 48, 1, 1],\n          [3 / 48, 2, 1],\n          [1 / 48, -2, 2],\n          [3 / 48, -1, 2],\n          [5 / 48, 0, 2],\n          [3 / 48, 1, 2],\n          [1 / 48, 2, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Burkes:\n        this._kernel = [\n          [8 / 32, 1, 0],\n          [4 / 32, 2, 0],\n          [2 / 32, -2, 1],\n          [4 / 32, -1, 1],\n          [8 / 32, 0, 1],\n          [4 / 32, 1, 1],\n          [2 / 32, 2, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.Sierra:\n        this._kernel = [\n          [5 / 32, 1, 0],\n          [3 / 32, 2, 0],\n          [2 / 32, -2, 1],\n          [4 / 32, -1, 1],\n          [5 / 32, 0, 1],\n          [4 / 32, 1, 1],\n          [2 / 32, 2, 1],\n          [2 / 32, -1, 2],\n          [3 / 32, 0, 2],\n          [2 / 32, 1, 2],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.TwoSierra:\n        this._kernel = [\n          [4 / 16, 1, 0],\n          [3 / 16, 2, 0],\n          [1 / 16, -2, 1],\n          [2 / 16, -1, 1],\n          [3 / 16, 0, 1],\n          [2 / 16, 1, 1],\n          [1 / 16, 2, 1],\n        ];\n        break;\n\n      case ErrorDiffusionArrayKernel.SierraLite:\n        this._kernel = [\n          [2 / 4, 1, 0],\n          [1 / 4, -1, 1],\n          [1 / 4, 0, 1],\n        ];\n        break;\n\n      default:\n        throw new Error('ErrorDiffusionArray: unknown kernel = ' + kernel);\n    }\n  }\n}\n","import { ProgressTracker } from '../../utils/progressTracker';\nimport { ImageQuantizerYieldValue } from '../imageQuantizerYieldValue';\n\nenum Direction {\n  NONE = 0,\n  UP,\n  LEFT,\n  RIGHT,\n  DOWN,\n}\n\ninterface Data {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  level: number;\n  index: number;\n  tracker: ProgressTracker;\n  callback(x: number, y: number): void;\n}\n\nexport function * hilbertCurve(width: number, height: number, callback: (x: number, y: number) => void) {\n  const maxBound = Math.max(width, height);\n  const level = Math.floor(Math.log(maxBound) / Math.log(2) + 1);\n  const tracker = new ProgressTracker(width * height, 99);\n  const data = {\n    width,\n    height,\n    level,\n    callback,\n    tracker,\n    index: 0,\n    x: 0,\n    y: 0,\n  };\n  yield * walkHilbert(data, Direction.UP);\n  visit(data, Direction.NONE);\n}\n\nfunction * walkHilbert(data: Data, direction: Direction): IterableIterator<ImageQuantizerYieldValue> {\n  if (data.level < 1) return;\n\n  if (data.tracker.shouldNotify(data.index)) yield { progress: data.tracker.progress };\n  data.level--;\n  switch (direction) {\n    case Direction.LEFT:\n      yield * walkHilbert(data, Direction.UP);\n      visit(data, Direction.RIGHT);\n      yield * walkHilbert(data, Direction.LEFT);\n      visit(data, Direction.DOWN);\n      yield * walkHilbert(data, Direction.LEFT);\n      visit(data, Direction.LEFT);\n      yield * walkHilbert(data, Direction.DOWN);\n      break;\n\n    case Direction.RIGHT:\n      yield * walkHilbert(data, Direction.DOWN);\n      visit(data, Direction.LEFT);\n      yield * walkHilbert(data, Direction.RIGHT);\n      visit(data, Direction.UP);\n      yield * walkHilbert(data, Direction.RIGHT);\n      visit(data, Direction.RIGHT);\n      yield * walkHilbert(data, Direction.UP);\n      break;\n\n    case Direction.UP:\n      yield * walkHilbert(data, Direction.LEFT);\n      visit(data, Direction.DOWN);\n      yield * walkHilbert(data, Direction.UP);\n      visit(data, Direction.RIGHT);\n      yield * walkHilbert(data, Direction.UP);\n      visit(data, Direction.UP);\n      yield * walkHilbert(data, Direction.RIGHT);\n      break;\n\n    case Direction.DOWN:\n      yield * walkHilbert(data, Direction.RIGHT);\n      visit(data, Direction.UP);\n      yield * walkHilbert(data, Direction.DOWN);\n      visit(data, Direction.LEFT);\n      yield * walkHilbert(data, Direction.DOWN);\n      visit(data, Direction.DOWN);\n      yield * walkHilbert(data, Direction.LEFT);\n      break;\n\n    default:\n      break;\n  }\n  data.level++;\n}\n\nfunction visit(data: Data, direction: Direction) {\n  if (data.x >= 0 && data.x < data.width && data.y >= 0 && data.y < data.height) {\n    data.callback(data.x, data.y);\n    data.index++;\n  }\n  switch (direction) {\n    case Direction.LEFT:\n      data.x--;\n      break;\n    case Direction.RIGHT:\n      data.x++;\n      break;\n    case Direction.UP:\n      data.y--;\n      break;\n    case Direction.DOWN:\n      data.y++;\n      break;\n  }\n}\n","/**\n * @preserve\n * MIT License\n *\n * Copyright 2015-2018 Igor Bezkrovnyi\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * riemersma.ts - part of Image Quantization Library\n */\nimport { AbstractImageQuantizer } from './imageQuantizer';\nimport { hilbertCurve } from './spaceFillingCurves/hilbertCurve';\nimport { AbstractDistanceCalculator } from '../distance/distanceCalculator';\nimport { PointContainer } from '../utils/pointContainer';\nimport { Palette } from '../utils/palette';\nimport { Point } from '../utils/point';\nimport { inRange0to255Rounded } from '../utils/arithmetic';\nimport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\n\nexport class ErrorDiffusionRiemersma extends AbstractImageQuantizer {\n  private _distance: AbstractDistanceCalculator;\n  private _weights: number[];\n  private _errorQueueSize: number;\n\n  constructor(colorDistanceCalculator: AbstractDistanceCalculator, errorQueueSize = 16, errorPropagation = 1) {\n    super();\n    this._distance = colorDistanceCalculator;\n    this._errorQueueSize = errorQueueSize;\n    this._weights = ErrorDiffusionRiemersma._createWeights(errorPropagation, errorQueueSize);\n  }\n\n  /**\n   * Mutates pointContainer\n   */\n  * quantize(pointContainer: PointContainer, palette: Palette) {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorQueue: Array<{ r: number; g: number; b: number; a: number }> = [];\n\n    let head = 0;\n\n    for (let i = 0; i < this._errorQueueSize; i++) {\n      errorQueue[i] = { r: 0, g: 0, b: 0, a: 0 };\n    }\n\n    yield * hilbertCurve(width, height, (x, y) => {\n      const p = pointArray[x + y * width];\n      let r = p.r;\n      let g = p.g;\n      let b = p.b;\n      let a = p.a;\n      for (let i = 0; i < this._errorQueueSize; i++) {\n        const weight = this._weights[i];\n        const e = errorQueue[(i + head) % this._errorQueueSize];\n\n        r += e.r * weight;\n        g += e.g * weight;\n        b += e.b * weight;\n        a += e.a * weight;\n      }\n\n      const correctedPoint = Point.createByRGBA(\n        inRange0to255Rounded(r),\n        inRange0to255Rounded(g),\n        inRange0to255Rounded(b),\n        inRange0to255Rounded(a),\n      );\n\n      const quantizedPoint = palette.getNearestColor(this._distance, correctedPoint);\n\n      // update head and calculate tail\n      head = (head + 1) % this._errorQueueSize;\n      const tail = (head + this._errorQueueSize - 1) % this._errorQueueSize;\n\n      // update error with new value\n      errorQueue[tail].r = p.r - quantizedPoint.r;\n      errorQueue[tail].g = p.g - quantizedPoint.g;\n      errorQueue[tail].b = p.b - quantizedPoint.b;\n      errorQueue[tail].a = p.a - quantizedPoint.a;\n\n      // update point\n      p.from(quantizedPoint);\n    });\n\n    yield {\n      pointContainer,\n      progress: 100,\n    };\n  }\n\n  private static _createWeights(errorPropagation: number, errorQueueSize: number) {\n    const weights: number[] = [];\n\n    const multiplier = Math.exp(Math.log(errorQueueSize) / (errorQueueSize - 1));\n    for (let i = 0, next = 1; i < errorQueueSize; i++) {\n      weights[i] = (((next + 0.5) | 0) / errorQueueSize) * errorPropagation;\n      next *= multiplier;\n    }\n\n    return weights;\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\n\nexport { AbstractImageQuantizer } from './imageQuantizer';\nexport { ImageQuantizerYieldValue } from './imageQuantizerYieldValue';\nexport { NearestColor } from './nearestColor';\nexport { ErrorDiffusionArray, ErrorDiffusionArrayKernel } from './array';\nexport { ErrorDiffusionRiemersma } from './riemersma';\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ssim.ts - part of Image Quantization Library\n */\nimport { PointContainer } from '../utils/pointContainer';\nimport { Y } from '../constants/bt709';\n\n// based on https://github.com/rhys-e/structural-similarity\n// http://en.wikipedia.org/wiki/Structural_similarity\nconst K1 = 0.01; // tslint:disable-line:naming-convention\nconst K2 = 0.03; // tslint:disable-line:naming-convention\n\nexport function ssim(image1: PointContainer, image2: PointContainer) {\n  if (image1.getHeight() !== image2.getHeight() || image1.getWidth() !== image2.getWidth()) {\n    throw new Error('Images have different sizes!');\n  }\n\n  const bitsPerComponent = 8;\n  const L = (1 << bitsPerComponent) - 1; // tslint:disable-line:naming-convention\n  const c1 = Math.pow((K1 * L), 2);\n  const c2 = Math.pow((K2 * L), 2);\n\n  let numWindows = 0;\n  let mssim = 0.0;\n\n  // calculate ssim for each window\n  iterate(image1, image2, (lumaValues1, lumaValues2, averageLumaValue1, averageLumaValue2) => {\n    // calculate variance and covariance\n    let sigxy = 0.0;\n    let sigsqx = 0.0;\n    let sigsqy = 0.0;\n\n    for (let i = 0; i < lumaValues1.length; i++) {\n      sigsqx += Math.pow((lumaValues1[i] - averageLumaValue1), 2);\n      sigsqy += Math.pow((lumaValues2[i] - averageLumaValue2), 2);\n\n      sigxy += (lumaValues1[i] - averageLumaValue1) * (lumaValues2[i] - averageLumaValue2);\n    }\n\n    const numPixelsInWin = lumaValues1.length - 1;\n    sigsqx /= numPixelsInWin;\n    sigsqy /= numPixelsInWin;\n    sigxy /= numPixelsInWin;\n\n    // perform ssim calculation on window\n    const numerator = (2 * averageLumaValue1 * averageLumaValue2 + c1) * (2 * sigxy + c2);\n    const denominator = (Math.pow(averageLumaValue1, 2) + Math.pow(averageLumaValue2, 2) + c1) * (sigsqx + sigsqy + c2);\n    const ssim = numerator / denominator;\n\n    mssim += ssim;\n    numWindows++;\n\n  });\n  return mssim / numWindows;\n}\n\nfunction iterate(image1: PointContainer, image2: PointContainer, callback: (lumaValues1: number[], lumaValues2: number[], averageLumaValue1: number, averageLumaValue2: number) => void) {\n  const windowSize = 8;\n  const width = image1.getWidth();\n  const height = image1.getHeight();\n\n  for (let y = 0; y < height; y += windowSize) {\n    for (let x = 0; x < width; x += windowSize) {\n      // avoid out-of-width/height\n      const windowWidth = Math.min(windowSize, width - x);\n      const windowHeight = Math.min(windowSize, height - y);\n\n      const lumaValues1 = calculateLumaValuesForWindow(image1, x, y, windowWidth, windowHeight);\n      const lumaValues2 = calculateLumaValuesForWindow(image2, x, y, windowWidth, windowHeight);\n      const averageLuma1 = calculateAverageLuma(lumaValues1);\n      const averageLuma2 = calculateAverageLuma(lumaValues2);\n\n      callback(lumaValues1, lumaValues2, averageLuma1, averageLuma2);\n    }\n  }\n}\n\nfunction calculateLumaValuesForWindow(image: PointContainer, x: number, y: number, width: number, height: number) {\n  const pointArray = image.getPointArray();\n  const lumaValues: number[] = [];\n\n  let counter = 0;\n\n  for (let j = y; j < y + height; j++) {\n    const offset = j * image.getWidth();\n    for (let i = x; i < x + width; i++) {\n      const point = pointArray[offset + i];\n      lumaValues[counter] = point.r * Y.RED + point.g * Y.GREEN + point.b * Y.BLUE;\n      counter++;\n    }\n  }\n\n  return lumaValues;\n}\n\nfunction calculateAverageLuma(lumaValues: number[]) {\n  let sumLuma = 0.0;\n  for (const luma of lumaValues) {\n    sumLuma += luma;\n  }\n\n  return sumLuma / lumaValues.length;\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nexport { ssim } from './ssim';\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = false;\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","var $export = require('./_export');\nvar $task = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate: $task.set,\n  clearImmediate: $task.clear\n});\n","require('../modules/web.immediate');\nmodule.exports = require('../modules/_core').setImmediate;\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * helper.ts - part of Image Quantization Library\n */\nimport * as setImmediate from 'core-js/fn/set-immediate';\nimport * as distance from './distance';\nimport * as image from './image';\nimport * as palette from './palette';\nimport { AbstractPaletteQuantizer } from './palette/paletteQuantizer';\nimport { AbstractDistanceCalculator } from './distance/distanceCalculator';\nimport { AbstractImageQuantizer } from './image/imageQuantizer';\nimport { PointContainer } from './utils/pointContainer';\nimport { Palette } from './utils/palette';\nimport { ssim } from './quality/ssim';\n\nexport type ColorDistanceFormula =\n  | 'cie94-textiles'\n  | 'cie94-graphic-arts'\n  | 'ciede2000'\n  | 'color-metric'\n  | 'euclidean'\n  | 'euclidean-bt709-noalpha'\n  | 'euclidean-bt709'\n  | 'manhattan'\n  | 'manhattan-bt709'\n  | 'manhattan-nommyde'\n  | 'pngquant';\n\nexport type PaletteQuantization =\n  | 'neuquant'\n  | 'neuquant-float'\n  | 'rgbquant'\n  | 'wuquant';\n\nexport type ImageQuantization =\n  | 'nearest'\n  | 'riemersma'\n  | 'floyd-steinberg'\n  | 'false-floyd-steinberg'\n  | 'stucki'\n  | 'atkinson'\n  | 'jarvis'\n  | 'burkes'\n  | 'sierra'\n  | 'two-sierra'\n  | 'sierra-lite';\n\nexport interface ProgressOptions {\n  onProgress?: (progress: number) => void;\n}\n\nexport interface ApplyPaletteOptions {\n  colorDistanceFormula?: ColorDistanceFormula;\n  imageQuantization?: ImageQuantization;\n}\n\nexport interface BuildPaletteOptions {\n  colorDistanceFormula?: ColorDistanceFormula;\n  paletteQuantization?: PaletteQuantization;\n  colors?: number;\n}\n\nexport function buildPaletteSync(images: PointContainer[], { colorDistanceFormula, paletteQuantization, colors }: BuildPaletteOptions = {}) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n  const paletteQuantizer = paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization, colors);\n  images.forEach(image => paletteQuantizer.sample(image));\n  return paletteQuantizer.quantizeSync();\n}\n\nexport async function buildPalette(images: PointContainer[], { colorDistanceFormula, paletteQuantization, colors, onProgress }: BuildPaletteOptions & ProgressOptions = {}) {\n  return new Promise<Palette>((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n    const paletteQuantizer = paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization, colors);\n    images.forEach(image => paletteQuantizer.sample(image));\n\n    let palette: Palette;\n    let timerId: number;\n    const iterator = paletteQuantizer.quantize();\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(palette);\n        } else {\n          if (result.value.palette) palette = result.value.palette;\n          if (onProgress) onProgress(result.value.progress);\n          timerId = setImmediate(next);\n        }\n      } catch (error) {\n        clearTimeout(timerId);\n        reject(error);\n      }\n    };\n    timerId = setImmediate(next);\n  });\n}\n\nexport function applyPaletteSync(image: PointContainer, palette: Palette, { colorDistanceFormula, imageQuantization }: ApplyPaletteOptions = {}) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n  const imageQuantizer = imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization);\n  return imageQuantizer.quantizeSync(image, palette);\n}\n\nexport async function applyPalette(image: PointContainer, palette: Palette, { colorDistanceFormula, imageQuantization, onProgress }: ApplyPaletteOptions & ProgressOptions = {}) {\n  return new Promise<PointContainer>((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n    const imageQuantizer = imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization);\n\n    let outPointContainer: PointContainer;\n    let timerId: number;\n    const iterator = imageQuantizer.quantize(image, palette);\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(outPointContainer);\n        } else {\n          if (result.value.pointContainer) outPointContainer = result.value.pointContainer;\n          if (onProgress) onProgress(result.value.progress);\n          timerId = setImmediate(next);\n        }\n      } catch (error) {\n        clearTimeout(timerId);\n        reject(error);\n      }\n    };\n    timerId = setImmediate(next);\n  });\n}\n\nfunction colorDistanceFormulaToColorDistance(colorDistanceFormula: ColorDistanceFormula = 'euclidean-bt709') {\n  switch (colorDistanceFormula) {\n    case 'cie94-graphic-arts': return new distance.CIE94GraphicArts();\n    case 'cie94-textiles': return new distance.CIE94Textiles();\n    case 'ciede2000': return new distance.CIEDE2000();\n    case 'color-metric': return new distance.CMetric();\n    case 'euclidean': return new distance.Euclidean();\n    case 'euclidean-bt709': return new distance.EuclideanBT709();\n    case 'euclidean-bt709-noalpha': return new distance.EuclideanBT709NoAlpha();\n    case 'manhattan': return new distance.Manhattan();\n    case 'manhattan-bt709': return new distance.ManhattanBT709();\n    case 'manhattan-nommyde': return new distance.ManhattanNommyde();\n    case 'pngquant': return new distance.PNGQuant();\n    default: throw new Error(`Unknown colorDistanceFormula ${colorDistanceFormula}`);\n  }\n}\n\nfunction imageQuantizationToImageQuantizer(distanceCalculator: AbstractDistanceCalculator, imageQuantization: ImageQuantization = 'floyd-steinberg') {\n  switch (imageQuantization) {\n    case 'nearest': return new image.NearestColor(distanceCalculator);\n    case 'riemersma': return new image.ErrorDiffusionRiemersma(distanceCalculator);\n    case 'floyd-steinberg': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.FloydSteinberg);\n    case 'false-floyd-steinberg': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.FalseFloydSteinberg);\n    case 'stucki': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.Stucki);\n    case 'atkinson': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.Atkinson);\n    case 'jarvis': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.Jarvis);\n    case 'burkes': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.Burkes);\n    case 'sierra': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.Sierra);\n    case 'two-sierra': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.TwoSierra);\n    case 'sierra-lite': return new image.ErrorDiffusionArray(distanceCalculator, image.ErrorDiffusionArrayKernel.SierraLite);\n    default: throw new Error(`Unknown imageQuantization ${imageQuantization}`);\n  }\n}\n\nfunction paletteQuantizationToPaletteQuantizer(distanceCalculator: AbstractDistanceCalculator, paletteQuantization: PaletteQuantization = 'wuquant', colors = 256) {\n  switch (paletteQuantization) {\n    case 'neuquant': return new palette.NeuQuant(distanceCalculator, colors);\n    case 'rgbquant': return new palette.RGBQuant(distanceCalculator, colors);\n    case 'wuquant': return new palette.WuQuant(distanceCalculator, colors);\n    case 'neuquant-float': return new palette.NeuQuantFloat(distanceCalculator, colors);\n    default: throw new Error(`Unknown paletteQuantization ${paletteQuantization}`);\n  }\n}\n","/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\nimport * as constants from './constants';\nimport * as conversion from './conversion';\nimport * as distance from './distance';\nimport * as palette from './palette';\nimport * as image from './image';\nimport * as quality from './quality';\nimport * as utils from './utils';\n\nexport {\n  buildPalette,\n  buildPaletteSync,\n  applyPalette,\n  applyPaletteSync,\n  ImageQuantization,\n  PaletteQuantization,\n  ColorDistanceFormula,\n} from './basicAPI';\n\nexport {\n  constants,\n  conversion,\n  distance,\n  palette,\n  image,\n  quality,\n  utils,\n};\n","function c1(a: ImageData, b: ImageData): number {\r\n  let dist = 0;\r\n  let dr, dg, db;\r\n  for (let i = 0; i < a.data.length; i += 4) {\r\n    dr = a.data[i] / 255.0 - b.data[i] / 255.0;\r\n    dist += dr * dr;\r\n    dg = a.data[i + 1] / 255.0 - b.data[i + 1] / 255.0;\r\n    dist += dg * dg;\r\n    db = a.data[i + 2] / 255.0 - b.data[i + 2] / 255.0;\r\n    dist += db * db;\r\n  }\r\n  return dist;\r\n}\r\n\r\nexport default function compare(a: ImageData, b: ImageData): number {\r\n  return c1(a, b);\r\n}\r\n","interface Brush {\r\n  paint(ctx: CanvasRenderingContext2D, palette: Uint32Array): void;\r\n}\r\n\r\nfunction getRandomColor(palette: Uint32Array) {\r\n  if (palette.length > 0) {\r\n    const num = palette[Math.floor(Math.random() * palette.length)];\r\n    //console.log(num.toString(16));\r\n    return \"#\" + num.toString(16).substr(2, 6);\r\n  } else {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n}\r\n\r\nclass Pointillist implements Brush {\r\n  paint(ctx: CanvasRenderingContext2D, palette: Uint32Array) {\r\n    ctx.fillStyle = getRandomColor(palette);\r\n    //ctx.globalAlpha = 0.4 + Math.random() * 0.6;\r\n\r\n    const x = Math.random() * ctx.canvas.width;\r\n    const y = Math.random() * ctx.canvas.height;\r\n    const rx = Math.random() * ctx.canvas.width * 0.03125;\r\n    const ry = rx;\r\n    ctx.beginPath();\r\n    ctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Round implements Brush {\r\n  paint(ctx: CanvasRenderingContext2D, palette: Uint32Array) {\r\n    ctx.fillStyle = getRandomColor(palette);\r\n    //ctx.globalAlpha = 0.4 + Math.random() * 0.6;\r\n\r\n    const x = Math.random() * ctx.canvas.width;\r\n    const y = Math.random() * ctx.canvas.height;\r\n    const rx = Math.random() * ctx.canvas.width * 0.125;\r\n    const ry = Math.random() * ctx.canvas.height * 0.125;\r\n    const rot = Math.random() * Math.PI;\r\n    ctx.beginPath();\r\n    ctx.ellipse(x, y, rx, ry, rot, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass Box implements Brush {\r\n  paint(ctx: CanvasRenderingContext2D, palette: Uint32Array) {\r\n    ctx.fillStyle = getRandomColor(palette);\r\n    const x = Math.random() * ctx.canvas.width;\r\n    const y = Math.random() * ctx.canvas.height;\r\n    const rx = Math.random() * ctx.canvas.width * 0.25;\r\n    const ry = Math.random() * ctx.canvas.height * 0.25;\r\n    ctx.beginPath();\r\n    ctx.fillRect(x, y, rx, ry);\r\n  }\r\n}\r\n\r\nclass SmallRound implements Brush {\r\n  paint(ctx: CanvasRenderingContext2D, palette: Uint32Array) {\r\n    ctx.fillStyle = getRandomColor(palette);\r\n\r\n    const x = Math.random() * ctx.canvas.width;\r\n    const y = Math.random() * ctx.canvas.height;\r\n    const rx = ctx.canvas.width * 0.025;\r\n    const ry = Math.random() * ctx.canvas.height * 0.25;\r\n    const rot = Math.random() * Math.PI;\r\n    ctx.beginPath();\r\n    ctx.ellipse(x, y, rx, ry, rot, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nclass BoxStrips implements Brush {\r\n  paint(ctx: CanvasRenderingContext2D, palette: Uint32Array) {\r\n    ctx.fillStyle = getRandomColor(palette);\r\n\r\n    const x = Math.random() * ctx.canvas.width;\r\n    const y = Math.random() * ctx.canvas.height;\r\n    let rx = 0;\r\n    let ry = 0;\r\n    if (Math.random() > 0.49999999) {\r\n      rx = ctx.canvas.width * 0.025;\r\n      ry = Math.random() * ctx.canvas.height * 0.25;\r\n    } else {\r\n      ry = ctx.canvas.height * 0.025;\r\n      rx = Math.random() * ctx.canvas.width * 0.25;\r\n    }\r\n    ctx.beginPath();\r\n    ctx.fillRect(x, y, rx, ry);\r\n  }\r\n}\r\n\r\nconst brushes: Brush[] = [\r\n  new Round(),\r\n  new Pointillist(),\r\n  new Box(),\r\n  new BoxStrips(),\r\n];\r\nexport { brushes };\r\nexport { Brush };\r\n","import * as dat from \"dat.gui\";\r\nimport { buildPaletteSync, utils } from \"image-q\";\r\n\r\nimport compare from \"./comparator\";\r\nimport { brushes, Brush } from \"./brush\";\r\n\r\nconst imageChoices = {\r\n  \"American Gothic\":\r\n    \"https://upload.wikimedia.org/wikipedia/commons/c/cc/Grant_Wood_-_American_Gothic_-_Google_Art_Project.jpg\",\r\n  \"Mona Lisa\":\r\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/1280px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg\",\r\n  \"Bedroom In Arles\":\r\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/76/Vincent_van_Gogh_-_De_slaapkamer_-_Google_Art_Project.jpg/2560px-Vincent_van_Gogh_-_De_slaapkamer_-_Google_Art_Project.jpg\",\r\n  \"Persistence of Memory\":\r\n    \"https://images2.minutemediacdn.com/image/upload/c_fill,g_auto,h_1248,w_2220/f_auto,q_auto,w_1100/v1554925323/shape/mentalfloss/clocks_1.png\",\r\n  \"The Shoemaker\":\r\n    \"https://uploads6.wikiart.org/images/jacob-lawrence/the-shoemaker-1945(1).jpg\",\r\n  \"Larry Bird\":\r\n    \"https://upload.wikimedia.org/wikipedia/commons/2/2f/Larry_Bird_Lipofsky.jpg\",\r\n};\r\n\r\nconst CANVAS_SIZE = 300;\r\nconst NO_PALETTE = new Uint32Array(0);\r\n\r\nclass PainterApp {\r\n  private statsEl: HTMLParagraphElement;\r\n  private image1: HTMLCanvasElement;\r\n  private image2: HTMLCanvasElement;\r\n  private imageTemp: HTMLCanvasElement;\r\n  private srcimg: HTMLImageElement;\r\n  private sourcePixels: ImageData;\r\n  private similarity: number;\r\n  private palette: Uint32Array;\r\n  private numStrokesKept: number;\r\n  private numStrokesTried: number;\r\n  private gui: any;\r\n  private guiState: {};\r\n  private brush: Brush;\r\n  private animationId: number;\r\n\r\n  public constructor() {\r\n    this.animationId = -1;\r\n    this.gui = new dat.GUI();\r\n    this.guiState = {\r\n      brush: 0,\r\n      image: imageChoices[\"American Gothic\"],\r\n      usePalette: true,\r\n      alpha0: 1,\r\n      alpha1: 1,\r\n    };\r\n    this.brush = brushes[0];\r\n    this.numStrokesTried = 0;\r\n    this.numStrokesKept = 0;\r\n    this.palette = new Uint32Array(0);\r\n    this.similarity = Number.MAX_VALUE;\r\n    this.image1 = document.createElement(\"canvas\");\r\n    this.imageTemp = document.createElement(\"canvas\");\r\n    this.image2 = document.createElement(\"canvas\");\r\n    this.statsEl = document.createElement(\"p\");\r\n    document.body.appendChild(this.image1);\r\n    document.body.appendChild(this.image2);\r\n    document.body.appendChild(this.statsEl);\r\n    this.srcimg = new Image();\r\n    //this.srcimg.crossOrigin = \"Anonymous\";\r\n    this.srcimg.setAttribute(\"crossOrigin\", \"\");\r\n    this.srcimg.onload = this.start.bind(this);\r\n    this.srcimg.crossOrigin = \"\";\r\n    this.srcimg.src = imageChoices[\"American Gothic\"];\r\n    this.sourcePixels = this.image2\r\n      .getContext(\"2d\")\r\n      .createImageData(this.image2.width, this.image2.height);\r\n    this.iterate = this.iterate.bind(this);\r\n    this.setupGui();\r\n  }\r\n\r\n  public start() {\r\n    const w = this.srcimg.naturalWidth;\r\n    const h = this.srcimg.naturalHeight;\r\n    const a = w / h;\r\n    let tgtw = CANVAS_SIZE;\r\n    let tgth = CANVAS_SIZE / a;\r\n    if (a > 1) {\r\n      tgth = CANVAS_SIZE;\r\n      tgtw = CANVAS_SIZE * a;\r\n    }\r\n    const ws = \"\" + tgtw + \"px\";\r\n    const hs = \"\" + tgth + \"px\";\r\n    this.image1.style.width = ws;\r\n    this.image1.style.height = hs;\r\n    this.image1.width = tgtw;\r\n    this.image1.height = tgth;\r\n    this.imageTemp.style.width = ws;\r\n    this.imageTemp.style.height = hs;\r\n    this.imageTemp.width = tgtw;\r\n    this.imageTemp.height = tgth;\r\n    this.image2.style.width = ws;\r\n    this.image2.style.height = hs;\r\n    this.image2.width = tgtw;\r\n    this.image2.height = tgth;\r\n\r\n    const ctx = this.image2.getContext(\"2d\");\r\n\r\n    // put our reference image into the srcimg canvas\r\n    ctx.drawImage(\r\n      this.srcimg,\r\n      0,\r\n      0,\r\n      this.srcimg.naturalWidth,\r\n      this.srcimg.naturalHeight,\r\n      0,\r\n      0,\r\n      this.image2.width,\r\n      this.image2.height\r\n    );\r\n    // now grab the downsampled pixels and hold onto them\r\n    this.sourcePixels = ctx.getImageData(\r\n      0,\r\n      0,\r\n      this.image2.width,\r\n      this.image2.height\r\n    );\r\n    // generate the palette.\r\n    const inPointContainer = utils.PointContainer.fromUint8Array(\r\n      this.sourcePixels.data,\r\n      this.sourcePixels.width,\r\n      this.sourcePixels.height\r\n    );\r\n    // convert\r\n    //    this.palette = buildPaletteSync([inPointContainer]);\r\n    const pal = buildPaletteSync([inPointContainer], {\r\n      //colorDistanceFormula: \"manhattan\", // optional\r\n      //paletteQuantization: \"neuquant-float\", // optional\r\n      colors: 256, // optional\r\n    });\r\n    this.palette = pal.getPointContainer().toUint32Array();\r\n\r\n    this.restartPainting();\r\n  }\r\n\r\n  private restartPainting() {\r\n    // stop any current rendering\r\n    cancelAnimationFrame(this.animationId);\r\n\r\n    // clear the canvas\r\n    const context = this.image1.getContext(\"2d\");\r\n    context.clearRect(0, 0, this.image1.width, this.image1.height);\r\n    const context2 = this.imageTemp.getContext(\"2d\");\r\n    context2.clearRect(0, 0, this.imageTemp.width, this.imageTemp.height);\r\n\r\n    // now we can start painting!\r\n    this.numStrokesTried = 0;\r\n    this.numStrokesKept = 0;\r\n    this.similarity = Number.MAX_VALUE;\r\n\r\n    this.iterate();\r\n  }\r\n\r\n  private setupGui() {\r\n    this.gui\r\n      .add(this.guiState, \"image\", imageChoices)\r\n      .name(\"Image\")\r\n      .onChange((value) => {\r\n        cancelAnimationFrame(this.animationId);\r\n        this.animationId = -1;\r\n        // initiate load of new image\r\n        this.srcimg.src = value;\r\n      });\r\n\r\n    this.gui.add(this.guiState, \"usePalette\").name(\"Limit Palette\");\r\n    this.gui\r\n      .add(this.guiState, \"brush\", {\r\n        Round: 0,\r\n        Pointillist: 1,\r\n        Boxy: 2,\r\n        Strips: 3,\r\n      })\r\n      .name(\"Brush\")\r\n      .onChange((value) => {\r\n        this.brush = brushes[value];\r\n      });\r\n\r\n    this.gui.add(this.guiState, \"alpha0\", 0, 1).name(\"Opacity Min\");\r\n    this.gui.add(this.guiState, \"alpha1\", 0, 1).name(\"Opacity Max\");\r\n\r\n    this.gui.add(this, \"restartPainting\").name(\"Restart\");\r\n  }\r\n\r\n  private brushStroke(\r\n    cvs: HTMLCanvasElement,\r\n    brush: Brush,\r\n    palette: Uint32Array\r\n  ) {\r\n    const ctx = cvs.getContext(\"2d\");\r\n    ctx.globalAlpha =\r\n      Math.random() * Math.abs(this.guiState.alpha1 - this.guiState.alpha0) +\r\n      Math.min(this.guiState.alpha0, this.guiState.alpha1);\r\n    brush.paint(ctx, palette);\r\n    return ctx.getImageData(0, 0, cvs.width, cvs.height);\r\n  }\r\n\r\n  private iterate() {\r\n    this.numStrokesTried += 1;\r\n    // 1. paint a brush stroke on imageTemp\r\n    const testimage = this.brushStroke(\r\n      this.imageTemp,\r\n      this.brush,\r\n      this.guiState.usePalette ? this.palette : NO_PALETTE\r\n    );\r\n\r\n    // 2. compare images\r\n    const newdiff = compare(testimage, this.sourcePixels);\r\n    //console.log(newdiff);\r\n    // 3. if new distance is less than previous distance,\r\n    //    keep the new image\r\n    if (newdiff < this.similarity) {\r\n      this.similarity = newdiff;\r\n      // copy temp image into image1\r\n      //grab the context from your destination canvas\r\n      var destCtx = this.image1.getContext(\"2d\");\r\n\r\n      destCtx.putImageData(testimage, 0, 0);\r\n      //destCtx.drawImage(this.imageTemp, 0, 0);\r\n\r\n      this.numStrokesKept += 1;\r\n    }\r\n    // 4. else don't\r\n    else {\r\n      // copy image1 into temp image\r\n      //grab the context from your destination canvas\r\n      var destCtx = this.imageTemp.getContext(\"2d\");\r\n\r\n      //call its drawImage() function passing it the source canvas directly\r\n      destCtx.drawImage(this.image1, 0, 0);\r\n    }\r\n\r\n    const TARGET = 0.1;\r\n    if (this.similarity > TARGET) {\r\n      this.updateStats();\r\n      this.animationId = requestAnimationFrame(this.iterate);\r\n    } else {\r\n      console.log(\"THRESHOLD ACHIEVED!!!!!\");\r\n    }\r\n  }\r\n\r\n  private updateStats() {\r\n    if (this.numStrokesTried % 100 === 0) {\r\n      // update the text readout.\r\n      this.statsEl.innerText =\r\n        \"Brushstrokes: \" +\r\n        this.numStrokesKept +\r\n        \"/\" +\r\n        this.numStrokesTried +\r\n        \"=\" +\r\n        this.numStrokesKept / this.numStrokesTried +\r\n        \"\\nSimilarity: \" +\r\n        this.similarity;\r\n    }\r\n  }\r\n}\r\n\r\nconst mypainter = new PainterApp();\r\n"]}